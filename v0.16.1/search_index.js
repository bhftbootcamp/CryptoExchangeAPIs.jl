var documenterSearchIndex = {"docs":
[{"location":"pages/Okex/#Okex","page":"Okex","title":"Okex","text":"","category":"section"},{"location":"pages/Okex/","page":"Okex","title":"Okex","text":"CryptoAPIs.Okex.OkexClient\nCryptoAPIs.Okex.OkexAPIError\nCryptoAPIs.Okex.Data","category":"page"},{"location":"pages/Okex/#CryptoAPIs.Okex.OkexClient","page":"Okex","title":"CryptoAPIs.Okex.OkexClient","text":"OkexClient <: AbstractAPIsClient\n\nClient info.\n\nRequired fields\n\nbase_url::String: Base URL for the client.\n\nOptional fields\n\npublic_key::String: Public key for authentication.\nsecret_key::String: Secret key for authentication.\ninterface::String: Interface for the client.\nproxy::String: Proxy information for the client.\naccount_name::String: Account name associated with the client.\ndescription::String: Description of the client.\n\n\n\n\n\n","category":"type"},{"location":"pages/Okex/#CryptoAPIs.Okex.OkexAPIError","page":"Okex","title":"CryptoAPIs.Okex.OkexAPIError","text":"OkexAPIError{T} <: AbstractAPIsError\n\nException thrown when an API method fails with code T.\n\nRequired fields\n\ncode::Int64: Error code.\nmsg::String: Error message.\n\nOptional fields\n\ndata::Vector{Any}: Error result data.\n\n\n\n\n\n","category":"type"},{"location":"pages/Okex/#CryptoAPIs.Okex.Data","page":"Okex","title":"CryptoAPIs.Okex.Data","text":"Data{D} <: AbstractAPIsData\n\nRequired fields\n\nmsg::String: Return message.\ncode::Int64: Return code.\ndata::Vector{D}: Result values.\n\n\n\n\n\n","category":"type"},{"location":"pages/Okex/#Spot","page":"Okex","title":"Spot","text":"","category":"section"},{"location":"pages/Okex/","page":"Okex","title":"Okex","text":"CryptoAPIs.Okex.Spot.public_client","category":"page"},{"location":"pages/Okex/#CryptoAPIs.Okex.Spot.public_client","page":"Okex","title":"CryptoAPIs.Okex.Spot.public_client","text":"public_client = OkexClient(; base_url = \"https://www.okex.com\")\n\n\n\n\n\n","category":"constant"},{"location":"pages/Okex/","page":"Okex","title":"Okex","text":"CryptoAPIs.Okex.Spot.candle\nCryptoAPIs.Okex.Spot.currency","category":"page"},{"location":"pages/Okex/#CryptoAPIs.Okex.Spot.Candle.candle","page":"Okex","title":"CryptoAPIs.Okex.Spot.Candle.candle","text":"candle(client::OkexClient, query::CandleQuery)\ncandle(client::OkexClient = Okex.Spot.public_client; kw...)\n\nRetrieve the candlestick charts.\n\nGET api/v5/market/candles\n\nParameters:\n\nParameter Type Required Description\ninstId String true \nafter DateTime false \nbar TimeInterval false m1 m3 m5 m15 m30 h1 h2 h4 h6 h12 d1 d2 d3 w1 M1 M3\nbefore DateTime false \nlimit Int64 false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Okex\n\nresult = Okex.Spot.candle(;\n    instId = \"BTC-USDT\",\n    bar = Okex.Spot.Candle.d1,\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"msg\":\"\",\n  \"code\":0,\n  \"data\":[\n    {\n      \"openTime\":\"2024-04-11T00:00:00\",\n      \"openPrice\":70637.1,\n      \"highPrice\":71315.9,\n      \"lowPrice\":69544.8,\n      \"closePrice\":70211.3,\n      \"vol\":9281.9689485,\n      \"volCcy\":6.537022764980018e8,\n      \"volCcyQuote\":6.537022764980018e8,\n      \"confirm\":0\n    },\n    ...\n  ]\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/Okex/#CryptoAPIs.Okex.Spot.Currency.currency","page":"Okex","title":"CryptoAPIs.Okex.Spot.Currency.currency","text":"currency(client::OkexClient, query::CurrencyQuery)\ncurrency(client::OkexClient; kw...)\n\nGet information of coins (available for deposit and withdraw) for user.\n\nGET api/v5/asset/currencies\n\nParameters:\n\nParameter Type Required Description\nccy String false \nsignature String false \ntimestamp DateTime false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Okex\n\nokex_client = OkexClient(;\n    base_url = \"https://www.okex.com\",\n    public_key = ENV[\"OKEX_PUBLIC_KEY\"],\n    secret_key = ENV[\"OKEX_SECRET_KEY\"],\n    passphrase = ENV[\"OKEX_PASSPHRASE\"],\n)\n\nresult = Okex.Spot.currency(okex_client; ccy = \"BTC\")\n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"msg\":\"\",\n  \"code\":0,\n  \"data\":[\n    {\n      \"canDep\":true,\n      \"canInternal\":true,\n      \"canWd\":true,\n      \"ccy\":\"BTC\",\n      \"chain\":\"BTC-Bitcoin\",\n      \"depQuotaFixed\":null,\n      \"depQuoteDailyLayer2\":null,\n      \"logoLink\":\"https://static.coinall.ltd/cdn/oksupport/asset/currency/icon/btc20230419112752.png\",\n      \"mainNet\":true,\n      \"maxFee\":0.0006,\n      \"maxWd\":500.0,\n      \"minDep\":0.0005,\n      \"minDepArrivalConfirm\":1,\n      \"minFee\":0.0003,\n      \"minWd\":0.001,\n      \"minWdUnlockConfirm\":2,\n      \"name\":\"Bitcoin\",\n      \"needTag\":false,\n      \"usedDepQuotaFixed\":null,\n      \"usedWdQuota\":0,\n      \"wdQuota\":40000000,\n      \"wdTickSz\":8\n    },\n    ...\n  ]\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/api_reference/#API-Reference","page":"API Reference","title":"API Reference","text":"","category":"section"},{"location":"pages/api_reference/","page":"API Reference","title":"API Reference","text":"CryptoAPIs.APIsHeaders\nCryptoAPIs.APIsResponse\nCryptoAPIs.APIsResult","category":"page"},{"location":"pages/api_reference/#CryptoAPIs.APIsHeaders","page":"API Reference","title":"CryptoAPIs.APIsHeaders","text":"APIsHeaders\n\nHeaders of the API resonse.\n\nOptional fields\n\ndate::String = nothing: Response date.\nretry_after::Float64 = 1.0: Number of retries.\n\n\n\n\n\n","category":"type"},{"location":"pages/api_reference/#CryptoAPIs.APIsResponse","page":"API Reference","title":"CryptoAPIs.APIsResponse","text":"APIsResponse\n\nAPI response status.\n\nfields\n\nheaders::APIsHeaders: Headers of the API resonse.\nstatus_code::Int64: API response status code.\n\n\n\n\n\n","category":"type"},{"location":"pages/api_reference/#CryptoAPIs.APIsResult","page":"API Reference","title":"CryptoAPIs.APIsResult","text":"APIsResult{T}\n\nResult T of the API method .\n\nRequired fields\n\nclient::AbstractAPIsClient: Request client.\nquery::APIsRequest: Request parameter query.\nresult::T: Result of the API request method.\n\nOptional fields\n\nresponse::APIsResponse: API response.\n\n\n\n\n\n","category":"type"},{"location":"pages/api_reference/","page":"API Reference","title":"API Reference","text":"CryptoAPIs.crypto_apis_client\nCryptoAPIs.crypto_apis_result\nCryptoAPIs.crypto_apis_query","category":"page"},{"location":"pages/api_reference/#CryptoAPIs.crypto_apis_client","page":"API Reference","title":"CryptoAPIs.crypto_apis_client","text":"crypto_apis_client(x::APIsResult)\n\nGetter function for obtaining information about the request client.\n\n\n\n\n\n","category":"function"},{"location":"pages/api_reference/#CryptoAPIs.crypto_apis_result","page":"API Reference","title":"CryptoAPIs.crypto_apis_result","text":"crypto_apis_result(x::APIsResult)\n\nGetter function for obtaining the response result.\n\n\n\n\n\n","category":"function"},{"location":"pages/api_reference/#CryptoAPIs.crypto_apis_query","page":"API Reference","title":"CryptoAPIs.crypto_apis_query","text":"crypto_apis_query(x::APIsResult)\n\nGetter function for obtaining query of the API request.\n\n\n\n\n\n","category":"function"},{"location":"pages/Cryptocom/#Cryptocom","page":"Cryptocom","title":"Cryptocom","text":"","category":"section"},{"location":"pages/Cryptocom/","page":"Cryptocom","title":"Cryptocom","text":"CryptoAPIs.Cryptocom.CryptocomClient\nCryptoAPIs.Cryptocom.CryptocomAPIError\nCryptoAPIs.Cryptocom.Data","category":"page"},{"location":"pages/Cryptocom/#CryptoAPIs.Cryptocom.CryptocomClient","page":"Cryptocom","title":"CryptoAPIs.Cryptocom.CryptocomClient","text":"CryptocomClient <: AbstractAPIsClient\n\nClient info.\n\nRequired fields\n\nbase_url::String: Base URL for the client.\n\nOptional fields\n\npublic_key::String: Public key for authentication.\nsecret_key::String: Secret key for authentication.\ninterface::String: Interface for the client.\nproxy::String: Proxy information for the client.\naccount_name::String: Account name associated with the client.\ndescription::String: Description of the client.\n\n\n\n\n\n","category":"type"},{"location":"pages/Cryptocom/#CryptoAPIs.Cryptocom.CryptocomAPIError","page":"Cryptocom","title":"CryptoAPIs.Cryptocom.CryptocomAPIError","text":"CryptocomAPIError{T} <: AbstractAPIsError\n\nException thrown when an API method fails with code T.\n\nRequired fields\n\ncode::Int64: Error code.\n\nOptional fields\n\nmessage::String: Error message.\ndescription::String: Error description.\n\n\n\n\n\n","category":"type"},{"location":"pages/Cryptocom/#CryptoAPIs.Cryptocom.Data","page":"Cryptocom","title":"CryptoAPIs.Cryptocom.Data","text":"Data{D} <: AbstractAPIsData\n\nRequired fields\n\nid::Int64: Return id.\nmethod::String: Return method endpoint.\ncode::String: Return code.\nresult::D: Request result data.\n\n\n\n\n\n","category":"type"},{"location":"pages/Cryptocom/#Spot","page":"Cryptocom","title":"Spot","text":"","category":"section"},{"location":"pages/Cryptocom/","page":"Cryptocom","title":"Cryptocom","text":"CryptoAPIs.Cryptocom.Spot.public_client","category":"page"},{"location":"pages/Cryptocom/#CryptoAPIs.Cryptocom.Spot.public_client","page":"Cryptocom","title":"CryptoAPIs.Cryptocom.Spot.public_client","text":"public_client = CryptocomClient(; base_url = \"https://api.crypto.com/exchange/v1\")\n\n\n\n\n\n","category":"constant"},{"location":"pages/Cryptocom/","page":"Cryptocom","title":"Cryptocom","text":"CryptoAPIs.Cryptocom.Spot.candle\nCryptoAPIs.Cryptocom.Spot.get_instruments\nCryptoAPIs.Cryptocom.Spot.ticker","category":"page"},{"location":"pages/Cryptocom/#CryptoAPIs.Cryptocom.Spot.Candle.candle","page":"Cryptocom","title":"CryptoAPIs.Cryptocom.Spot.Candle.candle","text":"candle(client::CryptocomClient, query::CandleQuery)\ncandle(client::CryptocomClient = Cryptocom.Spot.public_client; kw...)\n\nRetrieves candlesticks (k-line data history) over a given period for an instrument.\n\nGET public/get-candlestick\n\nParameters:\n\nParameter Type Required Description\ninstrument_name String true \ntimeframe TimeInterval false m1 m5 m15 m30 h1 h2 h4 h12 d1 d7 d14 M1\ncount Int64 false \nstart_ts Int64 false \nend_ts Int64 false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Cryptocom\n\nresult = Cryptocom.Spot.candle(;\n    instrument_name = \"BTC_USDT\",\n    timeframe = Cryptocom.Spot.Candle.M1,\n) \n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"id\":-1,\n  \"method\":\"public/get-candlestick\",\n  \"code\":\"0\",\n  \"result\":{\n    \"interval\":\"1M\",\n    \"data\":[\n      {\n        \"o\":19000.0,\n        \"h\":22982.05,\n        \"l\":15492.33,\n        \"c\":17170.28,\n        \"v\":150666.07457,\n        \"t\":\"2022-11-01T00:00:00\"\n      },\n      ...\n    ],\n    \"instrument_name\":\"BTC_USDT\"\n  }\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/Cryptocom/#CryptoAPIs.Cryptocom.Spot.GetInstruments.get_instruments","page":"Cryptocom","title":"CryptoAPIs.Cryptocom.Spot.GetInstruments.get_instruments","text":"get_instruments(client::CryptocomClient, query::GetInstrumentsQuery)\nget_instruments(client::CryptocomClient = Cryptocom.Spot.public_client; kw...)\n\nProvides information on all supported instruments.\n\nGET public/get-instruments\n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Cryptocom\n\nresult = Cryptocom.Spot.get_instruments() \n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"id\":-1,\n  \"method\":\"public/get-instruments\",\n  \"code\":\"0\",\n  \"result\":{\n    \"data\":[\n      {\n        \"symbol\":\"ZRX_USDT\",\n        \"inst_type\":\"CCY_PAIR\",\n        \"display_name\":\"ZRX/USDT\",\n        \"base_ccy\":\"ZRX\",\n        \"quote_ccy\":\"USDT\",\n        \"quote_decimals\":5.0,\n        \"quantity_decimals\":0.0,\n        \"price_tick_size\":\"0.00001\",\n        \"qty_tick_size\":\"1\",\n        \"max_leverage\":\"50\",\n        \"tradable\":true,\n        \"expiry_timestamp_ms\":0,\n        \"underlying_symbol\":null\n      },\n      ...\n    ]\n  }\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/Cryptocom/#CryptoAPIs.Cryptocom.Spot.Ticker.ticker","page":"Cryptocom","title":"CryptoAPIs.Cryptocom.Spot.Ticker.ticker","text":"ticker(client::CryptocomClient, query::TickerQuery)\nticker(client::CryptocomClient = Cryptocom.Spot.public_client; kw...)\n\nFetches the public tickers for all or a particular instrument.\n\nGET public/get-tickers\n\nParameters:\n\nParameter Type Required Description\ninstrument_name String false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Cryptocom\n\nresult = Cryptocom.Spot.ticker(; instrument_name = \"BTCUSD-PERP\") \n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"id\":-1,\n  \"method\":\"public/get-tickers\",\n  \"code\":\"0\",\n  \"result\":{\n    \"data\":[\n      {\n        \"h\":63090.7,\n        \"l\":59671.8,\n        \"a\":62296.2,\n        \"i\":\"BTCUSD-PERP\",\n        \"v\":10797.3637,\n        \"vv\":6.6340329849e8,\n        \"oi\":1844.5729,\n        \"c\":0.0003,\n        \"b\":62294.3,\n        \"k\":62297.0,\n        \"t\":\"2024-04-18T13:08:36.304999936\"\n      }\n    ]\n  }\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/Gateio/#Gateio","page":"Gateio","title":"Gateio","text":"","category":"section"},{"location":"pages/Gateio/","page":"Gateio","title":"Gateio","text":"CryptoAPIs.Gateio.GateioClient\nCryptoAPIs.Gateio.GateioAPIError","category":"page"},{"location":"pages/Gateio/#CryptoAPIs.Gateio.GateioClient","page":"Gateio","title":"CryptoAPIs.Gateio.GateioClient","text":"GateioClient <: AbstractAPIsClient\n\nClient info.\n\nRequired fields\n\nbase_url::String: Base URL for the client.\n\nOptional fields\n\npublic_key::String: Public key for authentication.\nsecret_key::String: Secret key for authentication.\ninterface::String: Interface for the client.\nproxy::String: Proxy information for the client.\naccount_name::String: Account name associated with the client.\ndescription::String: Description of the client.\n\n\n\n\n\n","category":"type"},{"location":"pages/Gateio/#CryptoAPIs.Gateio.GateioAPIError","page":"Gateio","title":"CryptoAPIs.Gateio.GateioAPIError","text":"GateioAPIError{T} <: AbstractAPIsError\n\nException thrown when an API method fails with code T.\n\nRequired fields\n\nlabel::String: Error label.\nmessage::String: Error message.\n\n\n\n\n\n","category":"type"},{"location":"pages/Gateio/#Spot","page":"Gateio","title":"Spot","text":"","category":"section"},{"location":"pages/Gateio/","page":"Gateio","title":"Gateio","text":"CryptoAPIs.Gateio.Spot.public_client","category":"page"},{"location":"pages/Gateio/#CryptoAPIs.Gateio.Spot.public_client","page":"Gateio","title":"CryptoAPIs.Gateio.Spot.public_client","text":"public_client = GateioClient(; base_url = \"https://api.gateio.ws\")\n\n\n\n\n\n","category":"constant"},{"location":"pages/Gateio/","page":"Gateio","title":"Gateio","text":"CryptoAPIs.Gateio.Spot.candle\nCryptoAPIs.Gateio.Spot.currency\nCryptoAPIs.Gateio.Spot.deposit\nCryptoAPIs.Gateio.Spot.ticker","category":"page"},{"location":"pages/Gateio/#CryptoAPIs.Gateio.Spot.Candle.candle","page":"Gateio","title":"CryptoAPIs.Gateio.Spot.Candle.candle","text":"candle(client::GateioClient, query::CandleQuery)\ncandle(client::GateioClient = Gateio.Spot.public_client; kw...)\n\nMarket candlesticks.\n\nGET api/v4/spot/candlesticks\n\nParameters:\n\nParameter Type Required Description\ncurrency_pair String true \nfrom DateTime false \ninterval TimeInterval false s10 m1 m5 m15 m30 h1 h4 h8 d1 d7 d30\nlimit Int64 false \n_end DateTime false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Gateio\n\nresult = Gateio.Spot.candle(;\n    currency_pair = \"BTC_USDT\",\n    interval = Gateio.Spot.Candle.d1,\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"timestamp\":\"2023-12-17T00:00:00\",\n    \"quote_volume\":2.43940917037979e8,\n    \"close_price\":41378.4,\n    \"high_price\":42421.6,\n    \"low_price\":41240.1,\n    \"open_price\":42275.6,\n    \"base_amount\":5819.36674398\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Gateio/#CryptoAPIs.Gateio.Spot.Currency.currency","page":"Gateio","title":"CryptoAPIs.Gateio.Spot.Currency.currency","text":"currency(client::GateioClient, query::CurrencyQuery)\ncurrency(client::GateioClient = Gateio.Spot.public_client; kw...)\n\nList all currencies' details.\n\nGET api/v4/spot/currencies\n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Gateio\n\nresult = Gateio.Spot.currency()\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"chain\":\"BSC\",\n    \"currency\":\"100X\",\n    \"delisted\":false,\n    \"deposit_disabled\":true,\n    \"fixed_rate\":null,\n    \"trade_disabled\":true,\n    \"withdraw_delayed\":false,\n    \"withdraw_disabled\":false\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Gateio/#CryptoAPIs.Gateio.Spot.Deposit.deposit","page":"Gateio","title":"CryptoAPIs.Gateio.Spot.Deposit.deposit","text":"deposit(client::GateioClient, query::CandleQuery)\ndeposit(client::GateioClient; kw...)\n\nRetrieve deposit records.\n\nGET api/v4/wallet/deposits\n\nParameters:\n\nParameter Type Required Description\ncurrency String false \nfrom DateTime false \nlimit Int64 false \noffset Int64 false \nto DateTime false \nsign String false \nsignTimestamp DateTime false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Gateio\n\ngateio_client = GateioClient(;\n    base_url = \"https://api.Gateio.ws\",\n    public_key = ENV[\"GATEIO_PUBLIC_KEY\"],\n    secret_key = ENV[\"GATEIO_SECRET_KEY\"],\n)\n\nresult = Gateio.Spot.deposit(gateio_client)\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"address\": \"1HkxtBAMrA3tP5EYY2CZortjZvFDH5Cs\",\n    \"amount\": 222.61,\n    \"chain\": \"TRX\"\n    \"currency\": \"USDT\",\n    \"fee\": null,\n    \"id\": 210496,\n    \"memo\": null,\n    \"status\": \"DONE\",\n    \"timestamp\": \"2018-11-12T05:20:00\",\n    \"txid\": 128988928203223323290,\n    \"withdraw_order_id\": \"order_123456\",\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Gateio/#CryptoAPIs.Gateio.Spot.Ticker.ticker","page":"Gateio","title":"CryptoAPIs.Gateio.Spot.Ticker.ticker","text":"ticker(client::GateioClient, query::TickerQuery)\nticker(client::GateioClient = Gateio.Spot.public_client; kw...)\n\nRetrieve ticker information.\n\nGET api/v4/spot/tickers\n\nParameters:\n\nParameter Type Required Description\ncurrency_pair String false \ntimezone String false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Gateio\n\nresult = Gateio.Spot.ticker(;\n    currency_pair = \"ADA_USDT\",\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"base_volume\":2.0167711540647e7,\n    \"change_percentage\":-4.77,\n    \"change_utc0\":null,\n    \"change_utc8\":null,\n    \"currency_pair\":\"ADA_USDT\",\n    \"etf_leverage\":null,\n    \"etf_net_value\":null,\n    \"etf_pre_net_value\":null,\n    \"etf_pre_timestamp\":null,\n    \"high_24h\":0.623,\n    \"highest_bid\":0.5869,\n    \"last\":0.5869,\n    \"low_24h\":0.5721,\n    \"lowest_ask\":0.587,\n    \"quote_volume\":1.1922473751288e7\n  }\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Gateio/#Futures","page":"Gateio","title":"Futures","text":"","category":"section"},{"location":"pages/Gateio/","page":"Gateio","title":"Gateio","text":"CryptoAPIs.Gateio.Futures.public_client","category":"page"},{"location":"pages/Gateio/#CryptoAPIs.Gateio.Futures.public_client","page":"Gateio","title":"CryptoAPIs.Gateio.Futures.public_client","text":"public_client = GateioClient(; base_url = \"https://api.gateio.ws\")\n\n\n\n\n\n","category":"constant"},{"location":"pages/Gateio/","page":"Gateio","title":"Gateio","text":"CryptoAPIs.Gateio.Futures.candle\nCryptoAPIs.Gateio.Futures.contract\nCryptoAPIs.Gateio.Futures.funding_rate\nCryptoAPIs.Gateio.Futures.order_book\nCryptoAPIs.Gateio.Futures.ticker","category":"page"},{"location":"pages/Gateio/#CryptoAPIs.Gateio.Futures.Candle.candle","page":"Gateio","title":"CryptoAPIs.Gateio.Futures.Candle.candle","text":"candle(client::GateioClient, query::CandleQuery)\ncandle(client::GateioClient = Gateio.Futures.public_client; kw...)\n\nGet futures candlesticks.\n\nGET api/v4/futures/{settle}/candlesticks\n\nParameters:\n\nParameter Type Required Description\ncontract String true \ninterval TimeInterval false s10 m1 m5 m15 m30 h1 h4 h8 d1 d7 d30\nfrom DateTime false \nto DateTime false \nlimit Int64 false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Gateio\n\nresult = Gateio.Futures.candle(; \n    type = Gateio.Futures.Candle.mark,\n    name = \"BTC_USDT\",\n    settle = Gateio.Futures.Candle.usdt,\n    interval = Gateio.Futures.Candle.d30,\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"t\":\"2024-03-01T00:00:00\",\n    \"v\":5932942626,\n    \"c\":71360.4,\n    \"h\":73879.3,\n    \"l\":59059.0,\n    \"o\":62415.7,\n    \"sum\":4.003183751397624e10\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Gateio/#CryptoAPIs.Gateio.Futures.Contract.contract","page":"Gateio","title":"CryptoAPIs.Gateio.Futures.Contract.contract","text":"contract(client::GateioClient, query::ContractQuery)\ncontract(client::GateioClient = Gateio.Futures.public_client; kw...)\n\nList all futures contracts.\n\nGET api/v4/futures/{settle}/contracts\n\nParameters:\n\nParameter Type Required Description\nlimit Int64 false \noffset Int64 false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Gateio\n\nresult = Gateio.Futures.contract(; settle = Gateio.Futures.Contract.btc)\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"name\":\"BTC_USD\",\n    \"type\":\"inverse\",\n    \"quanto_multiplier\":0.0,\n    \"ref_discount_rate\":0.0,\n    \"order_price_deviate\":0.5,\n    \"maintenance_rate\":0.005,\n    \"mark_type\":\"index\",\n    \"last_price\":62583.8,\n    \"mark_price\":62646.43,\n    \"index_price\":62642.32,\n    \"funding_rate_indicative\":7.5e-5,\n    \"mark_price_round\":0.01,\n    \"funding_offset\":0,\n    \"in_delisting\":false,\n    \"risk_limit_base\":100.0,\n    \"interest_rate\":0.0003,\n    \"order_price_round\":0.1,\n    \"order_size_min\":1,\n    \"ref_rebate_rate\":0.2,\n    \"funding_interval\":28800,\n    \"risk_limit_step\":100.0,\n    \"leverage_min\":1.0,\n    \"leverage_max\":100.0,\n    \"risk_limit_max\":800.0,\n    \"maker_fee_rate\":-0.0002,\n    \"taker_fee_rate\":0.00075,\n    \"funding_rate\":7.5e-5,\n    \"order_size_max\":1000000,\n    \"funding_next_apply\":\"2024-04-17T00:00:00\",\n    \"short_users\":163,\n    \"config_change_time\":\"2023-08-18T02:49:39\",\n    \"trade_size\":57555397672,\n    \"position_size\":12785272,\n    \"long_users\":544,\n    \"funding_impact_value\":1.0,\n    \"orders_limit\":50,\n    \"trade_id\":42816960,\n    \"orderbook_id\":4467223346,\n    \"enable_bonus\":false,\n    \"enable_credit\":true,\n    \"create_time\":\"1970-01-01T00:00:00\",\n    \"funding_cap_ratio\":0.75\n  }\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Gateio/#CryptoAPIs.Gateio.Futures.FundingRate.funding_rate","page":"Gateio","title":"CryptoAPIs.Gateio.Futures.FundingRate.funding_rate","text":"funding_rate(client::GateioClient, query::FundingRateQuery)\nfunding_rate(client::GateioClient = Gateio.Futures.public_client; kw...)\n\nFunding rate history.\n\nGET api/v4/futures/{settle}/funding_rate\n\nParameters:\n\nParameter Type Required Description\ncontract String true \nlimit Int64 false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Gateio\n\nresult = Gateio.Futures.funding_rate(; \n    settle = Gateio.Futures.FundingRate.usdt,\n    contract = \"BTC_USDT\",\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"t\":\"2024-04-16T08:00:00\",\n    \"r\":0.0001\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Gateio/#CryptoAPIs.Gateio.Futures.OrderBook.order_book","page":"Gateio","title":"CryptoAPIs.Gateio.Futures.OrderBook.order_book","text":"order_book(client::GateioClient, query::OrderBookQuery)\norder_book(client::GateioClient = Gateio.Futures.public_client; kw...)\n\nFutures order book.\n\nGET api/v4/futures/{settle}/order_book\n\nParameters:\n\nParameter Type Required Description\ncontract String true \ninterval String false \nlimit Int64 false \nwith_id Bool false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Gateio\n\nresult = Gateio.Futures.order_book(; \n    settle = Gateio.Futures.OrderBook.usdt,\n    contract = \"BTC_USDT\",\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"id\":null,\n  \"current\":1.713214908609e9,\n  \"update\":1.713214908589e9,\n  \"asks\":[\n    {\n      \"p\":\"63167.4\",\n      \"s\":1903\n    },\n    ...\n  ],\n  \"bids\":[\n    {\n      \"p\":\"63167.3\",\n      \"s\":10650\n    },\n    ...\n  ]\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/Gateio/#CryptoAPIs.Gateio.Futures.Ticker.ticker","page":"Gateio","title":"CryptoAPIs.Gateio.Futures.Ticker.ticker","text":"ticker(client::GateioClient, query::TickerQuery)\nticker(client::GateioClient = Gateio.Futures.public_client; kw...)\n\nList futures tickers.\n\nGET api/v4/futures/{settle}/tickers\n\nParameters:\n\nParameter Type Required Description\ncontract String false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Gateio\n\nresult = Gateio.Futures.ticker(; settle = Gateio.Futures.Ticker.btc)\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"contract\":\"BTC_USD\",\n    \"last\":62157.4,\n    \"low_24h\":61568.7,\n    \"high_24h\":64746.7,\n    \"change_percentage\":-3.12,\n    \"total_size\":12791802,\n    \"volume_24h\":21362145,\n    \"volume_24h_btc\":343,\n    \"volume_24h_usd\":21362145,\n    \"volume_24h_base\":343,\n    \"volume_24h_quote\":21362145,\n    \"volume_24h_settle\":343,\n    \"mark_price\":62221.82,\n    \"funding_rate\":0.0001,\n    \"funding_rate_indicative\":0.0001,\n    \"index_price\":62216.21,\n    \"highest_bid\":62129.9,\n    \"lowest_ask\":62133.1\n  }\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Upbit/#Upbit","page":"Upbit","title":"Upbit","text":"","category":"section"},{"location":"pages/Upbit/","page":"Upbit","title":"Upbit","text":"CryptoAPIs.Upbit.UpbitClient\nCryptoAPIs.Upbit.UpbitAPIError","category":"page"},{"location":"pages/Upbit/#CryptoAPIs.Upbit.UpbitClient","page":"Upbit","title":"CryptoAPIs.Upbit.UpbitClient","text":"UpbitClient <: AbstractAPIsClient\n\nClient info.\n\nRequired fields\n\nbase_url::String: Base URL for the client.\n\nOptional fields\n\npublic_key::String: Public key for authentication.\nsecret_key::String: Secret key for authentication.\ninterface::String: Interface for the client.\nproxy::String: Proxy information for the client.\naccount_name::String: Account name associated with the client.\ndescription::String: Description of the client.\n\n\n\n\n\n","category":"type"},{"location":"pages/Upbit/#CryptoAPIs.Upbit.UpbitAPIError","page":"Upbit","title":"CryptoAPIs.Upbit.UpbitAPIError","text":"UpbitAPIError{T} <: AbstractAPIsError\n\nException thrown when an API method fails with code T.\n\nRequired fields in UpbitAPIsErrorMsg\n\nname::Int64: Error code.\nmessage::String: Error message.\n\nRequired fields\n\nerror::UpbitAPIsErrorMsg: Error struct.\n\n\n\n\n\n","category":"type"},{"location":"pages/Upbit/#Spot","page":"Upbit","title":"Spot","text":"","category":"section"},{"location":"pages/Upbit/","page":"Upbit","title":"Upbit","text":"CryptoAPIs.Upbit.Spot.public_client","category":"page"},{"location":"pages/Upbit/#CryptoAPIs.Upbit.Spot.public_client","page":"Upbit","title":"CryptoAPIs.Upbit.Spot.public_client","text":"public_client = UpbitClient(; base_url = \"https://api.upbit.com\")\n\n\n\n\n\n","category":"constant"},{"location":"pages/Upbit/","page":"Upbit","title":"Upbit","text":"CryptoAPIs.Upbit.Spot.day_candle\nCryptoAPIs.Upbit.Spot.market_list\nCryptoAPIs.Upbit.Spot.order_book\nCryptoAPIs.Upbit.Spot.status_wallet\nCryptoAPIs.Upbit.Spot.ticker","category":"page"},{"location":"pages/Upbit/#CryptoAPIs.Upbit.Spot.DayCandle.day_candle","page":"Upbit","title":"CryptoAPIs.Upbit.Spot.DayCandle.day_candle","text":"day_candle(client::UpbitClient, query::DayCandleQuery)\nday_candle(client::UpbitClient = Upbit.Spot.public_client; kw...)\n\nDaily candle data.\n\nGET v1/candles/days\n\nParameters:\n\nParameter Type Required Description\nmarket String true \nconvertingPriceUnit String false \ncount Int64 false Max: 200\nto DateTime false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Upbit\n\nresult = Upbit.Spot.day_candle(;\n    market = \"KRW-BTC\"\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"market\":\"KRW-BTC\",\n    \"candle_acc_trade_price\":2.0574363150768314e11,\n    \"candle_acc_trade_volume\":2137.74569241,\n    \"candle_date_time_kst\":\"2024-03-25T09:00:00\",\n    \"candle_date_time_utc\":\"2024-03-25T00:00:00\",\n    \"change_price\":-419000.0,\n    \"change_rate\":-0.0043363968,\n    \"high_price\":9.7e7,\n    \"low_price\":9.56e7,\n    \"opening_price\":9.6624e7,\n    \"prev_closing_price\":9.6624e7,\n    \"timestamp\":\"2024-03-25T10:22:43.660999936\",\n    \"trade_price\":9.6205e7\n  }\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Upbit/#CryptoAPIs.Upbit.Spot.MarketList.market_list","page":"Upbit","title":"CryptoAPIs.Upbit.Spot.MarketList.market_list","text":"market_list(client::UpbitClient, query::MarketListQuery)\nmarket_list(client::UpbitClient = Upbit.Spot.public_client; kw...)\n\nListing Market List\n\nGET v1/market/all\n\nParameters:\n\nParameter Type Required Description\nisDetails Bool false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Upbit\n\nresult = Upbit.Spot.market_list()\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"english_name\":\"Bitcoin\",\n    \"korean_name\":\"비트코인\",\n    \"market\":\"KRW-BTC\",\n    \"market_warning\":\"NONE\"\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Upbit/#CryptoAPIs.Upbit.Spot.OrderBook.order_book","page":"Upbit","title":"CryptoAPIs.Upbit.Spot.OrderBook.order_book","text":"order_book(client::UpbitClient, query::OrderBookQuery)\norder_book(client::UpbitClient = Upbit.Spot.public_client; kw...)\n\nOrder book data\n\nGET v1/orderbook\n\nParameters:\n\nParameter Type Required Description\nmarkets String true \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Upbit\n\nresult = Upbit.Spot.order_book(;\n    markets = \"KRW-BTC\"\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"market\":\"KRW-BTC\",\n    \"orderbook_units\":[\n      {\n        \"ask_price\":9.6234e7,\n        \"ask_size\":0.00612883,\n        \"bid_price\":9.6228e7,\n        \"bid_size\":0.36973888\n      },\n      ...\n    ],\n    \"timestamp\":\"2024-03-25T10:34:07.163000064\",\n    \"total_ask_size\":1.74427302,\n    \"total_bid_size\":1.46524011\n  }\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Upbit/#CryptoAPIs.Upbit.Spot.StatusWallet.status_wallet","page":"Upbit","title":"CryptoAPIs.Upbit.Spot.StatusWallet.status_wallet","text":"status_wallet(client::UpbitClient, query::StatusWalletQuery)\nstatus_wallet(client::UpbitClient; kw...)\n\nBalance information.\n\nGET v1/status/wallet\n\nParameters:\n\nParamete Type Required Description\nsignature String false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Upbit\n\nresult = Upbit.Spot.status_wallet() \n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"currency\": \"KLAY\",\n    \"wallet_state\": \"working\",\n    \"block_state\": \"normal\",\n    \"block_height\": 7235123,\n    \"block_updated_at\": \"2019-02-18T07:08:50.499+00:00\",\n    \"block_elapsed_minutes\": 2502349,\n    \"net_type\": \"KLAY\",\n    \"network_name\": \"Klaytn\"\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Upbit/#CryptoAPIs.Upbit.Spot.Ticker.ticker","page":"Upbit","title":"CryptoAPIs.Upbit.Spot.Ticker.ticker","text":"ticker(client::UpbitClient, query::TickerQuery)\nticker(client::UpbitClient = Upbit.Spot.public_client; kw...)\n\nReturns a snapshot of the stock at the time of the request\n\nGET v1/ticker\n\nParameters:\n\nParameter Type Required Description\nmarkets String OR Vector{String} true \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Upbit\n\nresult = Upbit.Spot.ticker(;\n    markets = \"KRW-BTC\"\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"acc_trade_price\":2.1238782327620905e11,\n    \"acc_trade_price_24h\":4.622074226861333e11,\n    \"acc_trade_volume\":2206.86731219,\n    \"acc_trade_volume_24h\":4823.01685822,\n    \"change\":\"FALL\",\n    \"change_price\":544000.0,\n    \"change_rate\":0.0056300712,\n    \"high_price\":9.7e7,\n    \"highest_52_week_date\":\"2024-03-14\",\n    \"highest_52_week_price\":1.05e8,\n    \"low_price\":9.56e7,\n    \"lowest_52_week_date\":\"2023-06-15\",\n    \"lowest_52_week_price\":3.251e7,\n    \"market\":\"KRW-BTC\",\n    \"opening_price\":9.6624e7,\n    \"prev_closing_price\":9.6624e7,\n    \"signed_change_price\":-544000.0,\n    \"signed_change_rate\":-0.0056300712,\n    \"timestamp\":\"2024-03-25T10:53:39.956999936\",\n    \"trade_date\":\"2024-03-25\",\n    \"trade_date_kst\":\"2024-03-25\",\n    \"trade_price\":9.608e7,\n    \"trade_time\":\"10:53:39\",\n    \"trade_time_kst\":\"19:53:39\",\n    \"trade_timestamp\":\"2024-03-25T10:53:39.924\",\n    \"trade_volume\":0.0198534\n  }\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Coinbase/#Coinbase","page":"Coinbase","title":"Coinbase","text":"","category":"section"},{"location":"pages/Coinbase/","page":"Coinbase","title":"Coinbase","text":"CryptoAPIs.Coinbase.CoinbaseClient\nCryptoAPIs.Coinbase.CoinbaseAPIError","category":"page"},{"location":"pages/Coinbase/#CryptoAPIs.Coinbase.CoinbaseClient","page":"Coinbase","title":"CryptoAPIs.Coinbase.CoinbaseClient","text":"CoinbaseClient <: AbstractAPIsClient\n\nClient info.\n\nRequired fields\n\nbase_url::String: Base URL for the client. \n\nOptional fields\n\npublic_key::String: Public key for authentication.\nsecret_key::String: Secret key for authentication.\ninterface::String: Interface for the client.\nproxy::String: Proxy information for the client.\naccount_name::String: Account name associated with the client.\ndescription::String: Description of the client.\n\n\n\n\n\n","category":"type"},{"location":"pages/Coinbase/#CryptoAPIs.Coinbase.CoinbaseAPIError","page":"Coinbase","title":"CryptoAPIs.Coinbase.CoinbaseAPIError","text":"CoinbaseAPIError{T} <: AbstractAPIsError\n\nException thrown when an API method fails with code T.\n\nRequired fields\n\nmsg::String: Error message.\n\n\n\n\n\n","category":"type"},{"location":"pages/Coinbase/#Spot","page":"Coinbase","title":"Spot","text":"","category":"section"},{"location":"pages/Coinbase/","page":"Coinbase","title":"Coinbase","text":"CryptoAPIs.Coinbase.Spot.public_client","category":"page"},{"location":"pages/Coinbase/#CryptoAPIs.Coinbase.Spot.public_client","page":"Coinbase","title":"CryptoAPIs.Coinbase.Spot.public_client","text":"public_client = CoinbaseClient(; base_url = \"https://api.exchange.coinbase.com\")\n\n\n\n\n\n","category":"constant"},{"location":"pages/Coinbase/","page":"Coinbase","title":"Coinbase","text":"CryptoAPIs.Coinbase.Spot.candle\nCryptoAPIs.Coinbase.Spot.currency\nCryptoAPIs.Coinbase.Spot.fee_estimate\nCryptoAPIs.Coinbase.Spot.product\nCryptoAPIs.Coinbase.Spot.product_stats\nCryptoAPIs.Coinbase.Spot.ticker","category":"page"},{"location":"pages/Coinbase/#CryptoAPIs.Coinbase.Spot.Candle.candle","page":"Coinbase","title":"CryptoAPIs.Coinbase.Spot.Candle.candle","text":"candle(client::CoinbaseClient, query::CandleQuery)\ncandle(client::CoinbaseClient = Coinbase.Spot.public_client; kw...)\n\nGet rates for a single product by product ID, grouped in buckets.\n\nGET products/{product_id}/candles\n\nParameters:\n\nParameter Type Required Description\ngranularity TimeInterval true m1 m5 m15 h1 h6 d1\nstart DateTime false \n_end DateTime false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Coinbase\n\nresult = Coinbase.Spot.candle(;\n    granularity = Coinbase.Spot.Candle.d1\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"time\":\"2024-03-21T00:00:00\",\n    \"low\":0.617,\n    \"high\":0.648,\n    \"open\":0.637,\n    \"close\":0.632,\n    \"volume\":417732.13\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Coinbase/#CryptoAPIs.Coinbase.Spot.Currency.currency","page":"Coinbase","title":"CryptoAPIs.Coinbase.Spot.Currency.currency","text":"currency(client::CoinbaseClient, query::CurrencyQuery)\ncurrency(client::CoinbaseClient = Coinbase.Spot.public_client; kw...)\n\nGets a list of all known currencies.\n\nGET currencies\n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Coinbase\n\nresult = Coinbase.Spot.currency()\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"id\":\"00\",\n    \"name\":\"00 Token\",\n    \"min_size\":\"0.00000001\",\n    \"status\":\"online\",\n    \"message\":null,\n    \"max_precision\":1.0e-8,\n    \"convertible_to\":[\n\n    ],\n    \"details\":{\n        \"type\":\"crypto\",\n        \"symbol\":null,\n        \"network_confirmations\":14,\n        \"sort_order\":0,\n        \"crypto_address_link\":\"https://etherscan.io/token/0x881ba05de1e78f549cc63a8f6cabb1d4ad32250d?a={{address}}\",\n        \"crypto_transaction_link\":\"https://etherscan.io/tx/0x{{txId}}\",\n        \"push_payment_methods\":[\n\n        ],\n        \"group_types\":[\n\n        ],\n        \"display_name\":null,\n        \"processing_time_seconds\":null,\n        \"min_withdrawal_amount\":1.0e-8,\n        \"max_withdrawal_amount\":410000.0\n    },\n    \"default_network\":\"ethereum\",\n    \"supported_networks\":[\n        {\n        \"id\":\"ethereum\",\n        \"name\":\"Ethereum\",\n        \"status\":\"online\",\n        \"contract_address\":\"0x881ba05de1e78f549cc63a8f6cabb1d4ad32250d\",\n        \"crypto_address_link\":\"https://etherscan.io/token/0x881ba05de1e78f549cc63a8f6cabb1d4ad32250d?a={{address}}\",\n        \"crypto_transaction_link\":\"https://etherscan.io/tx/0x{{txId}}\",\n        \"min_withdrawal_amount\":1.0e-8,\n        \"max_withdrawal_amount\":410000.0,\n        \"network_confirmations\":14,\n        \"processing_time_seconds\":null\n        }\n    ]\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Coinbase/#CryptoAPIs.Coinbase.Spot.FeeEstimate.fee_estimate","page":"Coinbase","title":"CryptoAPIs.Coinbase.Spot.FeeEstimate.fee_estimate","text":"fee_estimate(client::CoinbaseClient, query::FeeEstimateQuery)\nfee_estimate(client::CoinbaseClient; kw...)\n\nGets the fee estimate for the crypto withdrawal to crypto address.\n\nGET withdrawals/fee-estimate\n\nParameters:\n\nParameter Type Required Description\ncurrency String false \ncrypto_address String false \nnetwork String false \nsignature String false \ntimestamp String false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Coinbase\n\ncoinbase_client = CoinbaseClient(;\n    base_url = \"https://api.exchange.coinbase.com\",\n    public_key = ENV[\"COINBASE_PUBLIC_KEY\"],\n    secret_key = ENV[\"COINBASE_SECRET_KEY\"],\n    passphrase = ENV[\"COINBASE_PASSPHRASE\"],\n)\n\nresult = Coinbase.Spot.fee_estimate(coinbase_client)\n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"fee\":0.1,\n  \"fee_before_subsidy\":0.01\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/Coinbase/#CryptoAPIs.Coinbase.Spot.Product.product","page":"Coinbase","title":"CryptoAPIs.Coinbase.Spot.Product.product","text":"product(client::CoinbaseClient, query::ProductQuery)\nproduct(client::CoinbaseClient = Coinbase.Spot.public_client; kw...)\n\nGets a list of available currency pairs for trading.\n\nGET products\n\nParameters:\n\nParameter Type Required Description\ntype String false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Coinbase\n\nresult = Coinbase.Spot.product(;\n    type = \"ADA-USDT\",\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"id\":\"BCH-GBP\",\n    \"base_currency\":\"BCH\",\n    \"quote_currency\":\"GBP\",\n    \"quote_increment\":0.01,\n    \"base_increment\":1.0e-8,\n    \"display_name\":\"BCH-GBP\",\n    \"min_market_funds\":0.72,\n    \"margin_enabled\":false,\n    \"post_only\":false,\n    \"limit_only\":false,\n    \"cancel_only\":false,\n    \"status\":\"online\",\n    \"status_message\":null,\n    \"trading_disabled\":false,\n    \"fx_stablecoin\":false,\n    \"max_slippage_percentage\":0.03,\n    \"auction_mode\":false,\n    \"high_bid_limit_percentage\":null\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Coinbase/#CryptoAPIs.Coinbase.Spot.ProductStats.product_stats","page":"Coinbase","title":"CryptoAPIs.Coinbase.Spot.ProductStats.product_stats","text":"product_stats(client::CoinbaseClient, query::ProductStatsQuery)\nproduct_stats(client::CoinbaseClient = Coinbase.Spot.public_client; kw...)\n\nGet rates for a single product by product ID, grouped in buckets.\n\nGET products/{product_id}/stats\n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Coinbase\n\nresult = Coinbase.Spot.product_stats()\n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"open\":65837.77,\n  \"high\":66944.06,\n  \"low\":64500.0,\n  \"last\":65975.28,\n  \"volume\":15431.78734886,\n  \"volume_30day\":648921.33864485,\n  \"rfq_volume_24hour\":20.273182,\n  \"rfq_volume_30day\":1452.764429,\n  \"conversions_volume_24hour\":null,\n  \"conversions_volume_30day\":null\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/Coinbase/#CryptoAPIs.Coinbase.Spot.Ticker.ticker","page":"Coinbase","title":"CryptoAPIs.Coinbase.Spot.Ticker.ticker","text":"ticker(client::CoinbaseClient, query::TickerQuery)\nticker(client::CoinbaseClient = Coinbase.Spot.public_client; kw...)\n\nGets snapshot information about the last trade (tick), best bid/ask and 24h volume.\n\nGET products/{product_id}/ticker\n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Coinbase\n\nresult = Coinbase.Spot.ticker(\n    product_id = \"ADA-USDT\",\n) \n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"ask\":0.633,\n  \"bid\":0.632,\n  \"volume\":420912.11,\n  \"trade_id\":679787,\n  \"price\":0.633,\n  \"size\":23.7,\n  \"time\":\"2024-03-21T23:34:52.062646\"\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/docs_miniguide/#Docs-mini-guide","page":"Docs mini-guide","title":"Docs mini-guide","text":"","category":"section"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"Here's a quick reference about what changes you need to make to the package description and documentation when adding new content.","category":"page"},{"location":"pages/docs_miniguide/#new_exchange","page":"Docs mini-guide","title":"New exchange","text":"","category":"section"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"When adding a new exchange to the package, you need to make the following changes:","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"README.md","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"In the Supported Exchange APIs table in the README.md you need to add a new row with links to relevant resources:","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"...\n<tr>\n    <td><img src=\"docs/src/assets/EXCHANGE_LOGO.png\" alt=\"Exchange Logo\" width=\"20\" height=\"20\"></td>\n    <td><a href=\"https://EXCHANGE_LINK\">EXCHANGE_NAME</a></td>\n    <td><a href=\"https://EXCHANGE_MARKET_LINK\">MARKET_TYPE</a></td>\n    <td><a href=\"src/EXCHANGE_NAME/MARKET_TYPE\">CryptoAPIs.EXCHANGE_NAME.MARKET_TYPE</a></td>\n    <td><a href=\"https://bhftbootcamp.github.io/CryptoAPIs.jl/stable/pages/EXCHANGE_NAME/#MARKET_TYPE\">MARKET_TYPE</a></td>\n</tr>\n...","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"docs/src/index.md","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"Similarly, add a new line to the table on the main documentation page in the file docs/src/index.md (the only difference will be the path of the logo: <img src=\"assets/EXCHANGE_LOGO.png\" ...>).","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"...\n<tr>\n    <td><img src=\"assets/EXCHANGE_LOGO.png\" alt=\"Exchange Logo\" width=\"20\" height=\"20\"></td>\n    <td><a href=\"https://EXCHANGE_LINK\">EXCHANGE_NAME</a></td>\n    <td><a href=\"https://EXCHANGE_MARKET_LINK\">MARKET_TYPE</a></td>\n    <td><a href=\"src/EXCHANGE_NAME/MARKET_TYPE\">CryptoAPIs.EXCHANGE_NAME.MARKET_TYPE</a></td>\n    <td><a href=\"https://bhftbootcamp.github.io/CryptoAPIs.jl/stable/pages/EXCHANGE_NAME/#MARKET_TYPE\">MARKET_TYPE</a></td>\n</tr>\n...","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"src/EXCHANGE_NAME/EXCHANGE_NAME.jl","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"Add a docstring describing key types and methods (clients, errors, etc.).","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"docs/src/pages/EXCHANGE_NAME.md","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"Create a new documentation page in the docs/src/pages/ folder in markdown format with the appropriate exchange name, for example docs/src/pages/Binance.md. The documentation page should have the following section structure:","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"# EXCHANGE_NAME\n\n```@docs\nCryptoAPIs.EXCHANGE_NAME.<...>\n<!-- Here list everything that is directly related to the\ngeneral description of the exchange (clients, errors, etc.) -->\n```\n\n<!-- Sections related to exchange markets begin here -->","category":"page"},{"location":"pages/docs_miniguide/#New-market","page":"Docs mini-guide","title":"New market","text":"","category":"section"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"When adding a new market type for an exchange, you need to make the following changes:","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"README.md and docs/src/index.md","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"Similar to adding a new exchange, you need to add a new row to the table with Supported Exchange APIs (in the README.md and on the main page of the documentation docs/src/index.md) corresponding to the new type of market.","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"src/EXCHANGE_NAME/MARKET_TYPE/MARKET_TYPE.jl","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"Add a docstring describing key types and methods related to the market (public client, etc.).","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"docs/src/pages/EXCHANGE_NAME.md","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"Add a new section corresponding to the exchange market in the file docs/src/pages/EXCHANGE_NAME.md:","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"## MARKET_TYPE\n\n```@docs\nCryptoAPIs.EXCHANGE_NAME.MARKET_TYPE.<...>\n<!-- Here list everything that is related to the market (public client, etc.) -->\n```\n\n```@docs\nCryptoAPIs.EXCHANGE_NAME.MARKET_TYPE.<...>\n<!-- Here list the API methods for the market -->\n```","category":"page"},{"location":"pages/docs_miniguide/#New-API-method","page":"Docs mini-guide","title":"New API method","text":"","category":"section"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"src/EXCHANGE_NAME/MARKET_TYPE/API/METHOD_NAME.jl","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"When adding a new API method, it is enough to add a docstring with a description of the method according to template.","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"docs/src/pages/EXCHANGE_NAME.md","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"After that, add the method to the section of the corresponding market in the documentation (in the file docs/src/pages/EXCHANGE_NAME.md):","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"## MARKET_TYPE\n\n...\n\n```@docs\nCryptoAPIs.EXCHANGE_NAME.MARKET_TYPE.<...>\n<!-- Here list the API methods for the market -->\n```","category":"page"},{"location":"pages/docs_miniguide/#template","page":"Docs mini-guide","title":"Template for API method docs","text":"","category":"section"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"\"\"\"\n    METHOD_NAME(client::EXCHANGE_CLIENT, query::METHOD_QUERY)\n    METHOD_NAME(client::EXCHANGE_CLIENT = EXCHANGE_MODULE.SUB_MODULE.public_client; kw...)\n\nDESCRIPTION.\n\n[`GET HTTP_REQUEST`](METHOD_URL)\n\n## Parameters:\n\n| Parameter | Type     | Required | Description |\n|:----------|:---------|:---------|:------------|\n| name      | type     | bool     | description |\n\n## Code samples:\n\n```julia\nusing Serde\nusing CryptoAPIs.EXCHANGE_MODULE\n\nresult = EXCHANGE_MODULE.SUB_MODULE.METHOD_NAME(;\n    ...\n)\n\nto_pretty_json(result.result)\n```\n\n## Result:\n\n```json\n{\n    JSON_RESULT\n}\n```\n\"\"\"","category":"page"},{"location":"pages/docs_miniguide/#Example","page":"Docs mini-guide","title":"Example","text":"","category":"section"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"README.md","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"## Supported Exchange APIs\n\n<html>\n    <body>\n        <table>\n            <tr>\n                <th>#</th>\n                <th>Exchange</th>\n                <th>API Documentation</th>\n                <th>Module</th>\n                <th>Documentation</th>\n            </tr>\n            ...\n            <tr>\n                <td><img src=\"docs/src/assets/binance.png\" alt=\"Binance Logo\" width=\"20\" height=\"20\"></td>\n                <td><a href=\"https://www.binance.com/en/trade\">Binance</a></td>\n                <td><a href=\"https://binance-docs.github.io/apidocs/spot/en/\">Spot</a></td>\n                <td><a href=\"src/Binance/Spot\">CryptoAPIs.Binance.Spot</a></td>\n                <td><a href=\"https://bhftbootcamp.github.io/CryptoAPIs.jl/stable/pages/Binance/#Spot\">Spot</a></td>\n            </tr>\n            ...\n        </table>\n    </body>\n</html>","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"docs/src/index.md","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"## Supported Exchange APIs\n\n```@raw html\n<html>\n    <body>\n        <table>\n            <tr>\n                <th>#</th>\n                <th>Exchange</th>\n                <th>API Documentation</th>\n                <th>Module</th>\n                <th>Documentation</th>\n            </tr>\n            ...\n            <tr>\n                <td><img src=\"assets/binance.png\" alt=\"Binance Logo\" width=\"20\" height=\"20\"></td>\n                <td><a href=\"https://www.binance.com/en/trade\">Binance</a></td>\n                <td><a href=\"https://binance-docs.github.io/apidocs/spot/en/\">Spot</a></td>\n                <td><a href=\"src/Binance/Spot\">CryptoAPIs.Binance.Spot</a></td>\n                <td><a href=\"https://bhftbootcamp.github.io/CryptoAPIs.jl/stable/pages/Binance/#Spot\">Spot</a></td>\n            </tr>\n            ...\n        </table>\n    </body>\n</html>\n```","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"docs/src/pages/EXCHANGE_NAME.md","category":"page"},{"location":"pages/docs_miniguide/","page":"Docs mini-guide","title":"Docs mini-guide","text":"# Binance\n\n```@docs\nCryptoAPIs.Binance.BinanceClient\nCryptoAPIs.Binance.BinanceAPIError\n```\n\n## Spot\n\n```@docs\nCryptoAPIs.Binance.Spot.public_client\n```\n\n```@docs\nCryptoAPIs.Binance.Spot.candle\nCryptoAPIs.Binance.Spot.avg_price\n...\n```\n\n## USDMFutures\n\n```@docs\nCryptoAPIs.Binance.USDMFutures.public_client\n```\n\n```@docs\nCryptoAPIs.Binance.USDMFutures.candle\nCryptoAPIs.Binance.USDMFutures.exchange_info\n...\n```\n","category":"page"},{"location":"#CryptoAPIs.jl","page":"Home","title":"CryptoAPIs.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"CryptoAPIs is a library written in Julia that combines API wrappers from various exchanges, simplifying access to market 💹 data.","category":"page"},{"location":"#Supported-Exchange-APIs","page":"Home","title":"Supported Exchange APIs","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"<html>\n    <body>\n        <table>\n            <tr>\n                <th>#</th>\n                <th>Exchange</th>\n                <th>API Documentation</th>\n                <th>Module</th>\n                <th>Documentation</th>\n            </tr>\n            <tr>\n                <td><img src=\"assets/binance.png\" alt=\"Binance Logo\" width=\"20\" height=\"20\"></td>\n                <td><a href=\"https://www.binance.com/en/trade\">Binance</a></td>\n                <td><a href=\"https://binance-docs.github.io/apidocs/spot/en/\">Spot</a></td>\n                <td><a href=\"src/Binance/Spot\">CryptoAPIs.Binance.Spot</a></td>\n                <td><a href=\"https://bhftbootcamp.github.io/CryptoAPIs.jl/stable/pages/Binance/#Spot\">Spot</a></td>\n            </tr>\n            <tr>\n                <td><img src=\"assets/binance.png\" alt=\"Binance Logo\" width=\"20\" height=\"20\"></td>\n                <td><a href=\"https://www.binance.com/futures\">Binance</a></td>\n                <td><a href=\"https://binance-docs.github.io/apidocs/futures/en/#change-log\">USD-M Futures</a></td>\n                <td><a href=\"src/Binance/USDMFutures\">CryptoAPIs.Binance.USDMFutures</a></td>\n                <td><a href=\"https://bhftbootcamp.github.io/CryptoAPIs.jl/stable/pages/Binance/#USDMFutures\">USD-M Futures</a></td>\n            </tr>\n            <tr>\n                <td><img src=\"assets/binance.png\" alt=\"Binance Logo\" width=\"20\" height=\"20\"></td>\n                <td><a href=\"https://www.binance.com/delivery\">Binance</a></td>\n                <td><a href=\"https://binance-docs.github.io/apidocs/delivery/en/\">Coin-M Futures</a></td>\n                <td><a href=\"src/Binance/CoinMFutures\">CryptoAPIs.Binance.CoinMFutures</a></td>\n                <td><a href=\"https://bhftbootcamp.github.io/CryptoAPIs.jl/stable/pages/Binance/#CoinMFutures\">Coin-M Futures</a></td>\n            </tr>\n            <tr>\n                <td><img src=\"assets/bybit.png\" alt=\"Bybit Logo\" width=\"20\" height=\"20\"></td>\n                <td><a href=\"https://www.bybit.com/en/trade/spot/BTC/USDT\">Bybit</a></td>\n                <td><a href=\"https://bybit-exchange.github.io/docs/\">Spot</a></td>\n                <td><a href=\"src/Bybit/Spot\">CryptoAPIs.Bybit.Spot</a></td>\n                <td><a href=\"https://bhftbootcamp.github.io/CryptoAPIs.jl/stable/pages/Bybit/#Spot\">Spot</a></td>\n            </tr>\n            <tr>\n                <td><img src=\"assets/coinbase.png\" alt=\"Coinbase Logo\" width=\"20\" height=\"20\"></td>\n                <td><a href=\"https://www.coinbase.com/\">Coinbase Exchange</a></td>\n                <td><a href=\"https://docs.cloud.coinbase.com/exchange/reference/\">Spot</a></td>\n                <td><a href=\"src/Coinbase/Spot\">CryptoAPIs.Coinbase.Spot</a></td>\n                <td><a href=\"https://bhftbootcamp.github.io/CryptoAPIs.jl/stable/pages/Coinbase/#Spot\">Spot</a></td>\n            </tr>\n            <tr>\n                <td><img src=\"assets/cryptocom.png\" alt=\"Cryptocom Logo\" width=\"20\" height=\"20\"></td>\n                <td><a href=\"https://crypto.com/\">Cryptocom</a></td>\n                <td><a href=\"https://exchange-docs.crypto.com/exchange/v1/rest-ws/index.html#introduction\">Spot</a></td>\n                <td><a href=\"src/Cryptocom/Spot\">CryptoAPIs.Cryptocom.Spot</a></td>\n                <td><a href=\"https://bhftbootcamp.github.io/CryptoAPIs.jl/stable/pages/Cryptocom/#Spot\">Spot</a></td>\n            </tr>\n            <tr>\n                <td><img src=\"assets/gateio.png\" alt=\"Gateio Logo\" width=\"20\" height=\"20\"></td>\n                <td><a href=\"https://www.gate.io/\">Gate.io</a></td>\n                <td><a href=\"https://www.gate.io/docs/developers/apiv4/\">Spot</a></td>\n                <td><a href=\"src/Gateio/Spot\">CryptoAPIs.Gateio.Spot</a></td>\n                <td><a href=\"https://bhftbootcamp.github.io/CryptoAPIs.jl/stable/pages/Gateio/#Spot\">Spot</a></td>\n            </tr>\n            <tr>\n                <td><img src=\"assets/gateio.png\" alt=\"Gateio Logo\" width=\"20\" height=\"20\"></td>\n                <td><a href=\"https://www.gate.io/\">Gate.io</a></td>\n                <td><a href=\"https://www.gate.io/docs/developers/apiv4/\">Futures</a></td>\n                <td><a href=\"src/Gateio/Futures\">CryptoAPIs.Gateio.Futures</a></td>\n                <td><a href=\"https://bhftbootcamp.github.io/CryptoAPIs.jl/stable/pages/Gateio/#Futures\">Futures</a></td>\n            </tr>\n            <tr>\n                <td><img src=\"assets/okex.png\" alt=\"Okex Logo\" width=\"20\" height=\"20\"></td>\n                <td><a href=\"https://www.okx.com/\">Okex</a></td>\n                <td><a href=\"https://www.okx.com/docs-v5/en/\">Spot</a></td>\n                <td><a href=\"src/Okex/Spot\">CryptoAPIs.Okex.Spot</a></td>\n                <td><a href=\"https://bhftbootcamp.github.io/CryptoAPIs.jl/stable/pages/Okex/#Spot\">Spot</a></td>\n            </tr>\n            <tr>\n                <td><img src=\"assets/upbit.png\" alt=\"Upbit Logo\" width=\"20\" height=\"20\"></td>\n                <td><a href=\"https://upbit.com/\">Upbit</a></td>\n                <td><a href=\"https://global-docs.upbit.com/\">Spot</a></td>\n                <td><a href=\"src/Upbit/Spot\">CryptoAPIs.Upbit.Spot</a></td>\n                <td><a href=\"https://bhftbootcamp.github.io/CryptoAPIs.jl/stable/pages/Upbit/#Spot\">Spot</a></td>\n            </tr>\n        </table>\n    </body>\n</html>","category":"page"},{"location":"#Quickstart","page":"Home","title":"Quickstart","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using CryptoAPIs\nusing CryptoAPIs.Binance\n\nBinance.Spot.ticker(;\n    symbols = [\"ADAUSDT\", \"BTCUSDT\"]\n)\n\nBinance.Spot.candle(;\n    symbol = \"ADAUSDT\",\n    interval = Binance.Spot.Candle.M1\n)\n\nBinance.Spot.avg_price(;\n    symbol = \"ADAUSDT\"\n)\n\nBinance.Spot.order_book(;\n    symbol = \"ADAUSDT\"\n)","category":"page"},{"location":"pages/Bybit/#Bybit","page":"Bybit","title":"Bybit","text":"","category":"section"},{"location":"pages/Bybit/","page":"Bybit","title":"Bybit","text":"CryptoAPIs.Bybit.BybitClient\nCryptoAPIs.Bybit.BybitAPIError\nCryptoAPIs.Bybit.List\nCryptoAPIs.Bybit.Rows\nCryptoAPIs.Bybit.Data","category":"page"},{"location":"pages/Bybit/#CryptoAPIs.Bybit.BybitClient","page":"Bybit","title":"CryptoAPIs.Bybit.BybitClient","text":"BybitClient <: AbstractAPIsClient\n\nClient info.\n\nRequired fields\n\nbase_url::String: Base URL for the client.\n\nOptional fields\n\npublic_key::String: Public key for authentication.\nsecret_key::String: Secret key for authentication.\ninterface::String: Interface for the client.\nproxy::String: Proxy information for the client.\naccount_name::String: Account name associated with the client.\ndescription::String: Description of the client.\n\n\n\n\n\n","category":"type"},{"location":"pages/Bybit/#CryptoAPIs.Bybit.BybitAPIError","page":"Bybit","title":"CryptoAPIs.Bybit.BybitAPIError","text":"BybitAPIError{T} <: AbstractAPIsError\n\nException thrown when an API method fails with code T.\n\nRequired fields\n\nretCode::Int64: Error code.\nretMsg::String: Error message.\nresult::Dict{String,Any}: Error result data.\nretExtInfo::Dict{String,Any}: Extended error information.\ntime::NanoDate: Error timestamp (ms).\n\n\n\n\n\n","category":"type"},{"location":"pages/Bybit/#CryptoAPIs.Bybit.List","page":"Bybit","title":"CryptoAPIs.Bybit.List","text":"List{D} <: AbstractAPIsData\n\nRequired fields\n\nlist::Vector{D}: Result values.\n\nOptional fields\n\nnextPageCursor::String: Pagination cursor.\ncategory::String: Product type\n\n\n\n\n\n","category":"type"},{"location":"pages/Bybit/#CryptoAPIs.Bybit.Rows","page":"Bybit","title":"CryptoAPIs.Bybit.Rows","text":"Rows{D} <: AbstractAPIsData\n\nRequired fields\n\nrows::Vector{D}: Result values.\n\nOptional fields\n\nnextPageCursor::String: Pagination cursor.\n\n\n\n\n\n","category":"type"},{"location":"pages/Bybit/#CryptoAPIs.Bybit.Data","page":"Bybit","title":"CryptoAPIs.Bybit.Data","text":"Data{D} <: AbstractAPIsData\n\nRequired fields\n\nretCode::Int64: Return code.\nretMsg::String: Return msg.\nresult::D: Request result data.\nretExtInfo::Dict{String,Any}: Request extended information.\ntime::NanoDate: Current timestamp (ms).\n\n\n\n\n\n","category":"type"},{"location":"pages/Bybit/#Spot","page":"Bybit","title":"Spot","text":"","category":"section"},{"location":"pages/Bybit/","page":"Bybit","title":"Bybit","text":"CryptoAPIs.Bybit.Spot.public_client","category":"page"},{"location":"pages/Bybit/#CryptoAPIs.Bybit.Spot.public_client","page":"Bybit","title":"CryptoAPIs.Bybit.Spot.public_client","text":"public_client = BybitClient(; base_url = \"https://api.bybit.com\")\n\n\n\n\n\n","category":"constant"},{"location":"pages/Bybit/","page":"Bybit","title":"Bybit","text":"CryptoAPIs.Bybit.Spot.candle\nCryptoAPIs.Bybit.Spot.coin_info\nCryptoAPIs.Bybit.Spot.deposit\nCryptoAPIs.Bybit.Spot.order_book\nCryptoAPIs.Bybit.Spot.symbol_info\nCryptoAPIs.Bybit.Spot.ticker","category":"page"},{"location":"pages/Bybit/#CryptoAPIs.Bybit.Spot.Candle.candle","page":"Bybit","title":"CryptoAPIs.Bybit.Spot.Candle.candle","text":"Bybit(client::BybitClient, query::CandleQuery)\nBybit(client::BybitClient = Bybit.Spot.public_client; kw...)\n\nGET /spot/v3/public/quote/kline\n\nParameters:\n\nParameter Type Required Description\nsymbol String true \ninterval TimeInterval true m1 m3 m5 m15 m30 h1 h2 h4 h6 h8 h12 d1 d3 w1 M1\nendTime DateTime false \nlimit Int64 false \nstartTime DateTime false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Bybit\n\nresult = Bybit.Spot.candle(;\n    symbol = \"ADAUSDT\",\n    interval = Bybit.Spot.Candle.M1,\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"retCode\":0,\n  \"retMsg\":\"OK\",\n  \"result\":{\n    \"list\":[\n      {\n        \"c\":1.97,\n        \"h\":2.303,\n        \"l\":1.822,\n        \"o\":2.105,\n        \"s\":\"ADAUSDT\",\n        \"sn\":\"ADAUSDT\",\n        \"t\":\"2021-10-01T00:00:00\",\n        \"v\":2.7565224e6\n      },\n      ...\n    ],\n    \"nextPageCursor\":null,\n    \"category\":null\n  },\n  \"retExtInfo\":{},\n  \"time\":\"2024-03-25T18:36:39.372\"\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/Bybit/#CryptoAPIs.Bybit.Spot.CoinInfo.coin_info","page":"Bybit","title":"CryptoAPIs.Bybit.Spot.CoinInfo.coin_info","text":"coin_info(client::BybitClient, query::CoinInfoQuery)\ncoin_info(client::BybitClient; kw...)\n\nQuery Coin Information.\n\nGET asset/v3/private/coin-info/query\n\nParameters:\n\nParameter Type Required Description\ncoin String false \napi_key String false \nrecv_window Int64 false Default: 5000\nsignature String false \ntimestamp DateTime false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Bybit\n\nbybit_client = BybitClient(;\n    base_url = \"https://api.bybit.com\",\n    public_key = ENV[\"BYBIT_PUBLIC_KEY\"],\n    secret_key = ENV[\"BYBIT_SECRET_KEY\"],\n)\n\nresult = Bybit.Spot.coin_info(bybit_client)\n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"retCode\":0,\n  \"retMsg\":\"\",\n  \"result\":{\n    \"rows\":[\n      {\n        \"chains\":[\n          {\n            \"chain\":\"ETH\",\n            \"chainDeposit\":1,\n            \"chainType\":\"ERC20\",\n            \"chainWithdraw\":1,\n            \"confirmation\":6,\n            \"depositMin\":0.0,\n            \"minAccuracy\":8,\n            \"withdrawFee\":3.0,\n            \"withdrawMin\":3.0\n          }\n        ],\n        \"coin\":\"AGLD\",\n        \"name\":\"AGLD\",\n        \"remainAmount\":256400\n      },\n      ...\n    ],\n    \"nextPageCursor\":null\n  },\n  \"retExtInfo\":{},\n  \"time\":\"2024-03-27T14:22:12.088\"\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/Bybit/#CryptoAPIs.Bybit.Spot.Deposit.deposit","page":"Bybit","title":"CryptoAPIs.Bybit.Spot.Deposit.deposit","text":"deposit(client::BybitClient, query::DepositQuery)\ndeposit(client::BybitClient; kw...)\n\nQuery Deposit Records.\n\nGET asset/v3/private/deposit/record/query\n\nParameters:\n\nParameter Type Required Description\ncoin String false \ncursor String false \nendTime DateTime false \nlimit Int64 false Default: 50, Max: 50\nstartTime DateTime false \napi_key String false \nrecv_window Int64 false Default: 5000\nsignature String false \ntimestamp DateTime false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Bybit\n\nbybit_client = BybitClient(;\n    base_url = \"https://api.bybit.com\",\n    public_key = ENV[\"BYBIT_PUBLIC_KEY\"],\n    secret_key = ENV[\"BYBIT_SECRET_KEY\"],\n)\n\nresult = Bybit.Spot.deposit(bybit_client)\n\nto_pretty_json(result.result)\n\nResult:\n\n{\n    \"retCode\": 0,\n    \"retMsg\": \"success\",\n    \"result\": {\n        \"rows\": [\n            {\n                \"coin\": \"USDT\",\n                \"chain\": \"ETH\",\n                \"amount\": \"10000\",\n                \"txID\": \"1234567890\",\n                \"status\": 3,\n                \"toAddress\": \"xxxxxxxxxxx\",\n                \"tag\": \"\",\n                \"depositFee\": \"\",\n                \"successAt\": \"2024-02-27T14:22:12.000\",\n                \"confirmations\": \"10000\",\n                \"txIndex\": \"\",\n                \"blockHash\": \"\",\n            },\n            {\n                \"coin\": \"USDT\",\n                \"chain\": \"ETH\",\n                \"amount\": \"10000\",\n                \"txID\": \"01234567890\",\n                \"status\": 3,\n                \"toAddress\": \"xxxxxxxxxxx\",\n                \"tag\": \"\",\n                \"depositFee\": \"\",\n                \"successAt\": \"2023-12-15T12:03:40.000\",\n                \"confirmations\": \"10000\",\n                \"txIndex\": \"\",\n                \"blockHash\": \"\",\n            }\n        ],\n        \"nextPageCursor\": \"X78...x89\"\n    },\n    \"retExtInfo\": {},\n    \"time\": \"2024-03-27T14:22:12.088\"\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/Bybit/#CryptoAPIs.Bybit.Spot.OrderBook.order_book","page":"Bybit","title":"CryptoAPIs.Bybit.Spot.OrderBook.order_book","text":"order_book(client::BybitClient, query::OrderBookQuery)\norder_book(client::BybitClient = Bybit.Spot.public_client; kw...)\n\nGET /spot/v3/public/quote/depth\n\nParameters:\n\nParameter Type Required Description\nsymbol String true \nlimit Int64 false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Bybit\n\nresult = Bybit.Spot.order_book(;\n    symbol = \"ADAUSDT\",\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"retCode\":0,\n  \"retMsg\":\"OK\",\n  \"result\":{\n    \"asks\":[\n      {\n        \"price\":0.6627,\n        \"size\":2144.17\n      },\n      ...\n    ],\n    \"bids\":[\n      {\n        \"price\":0.6625,\n        \"size\":447.02\n      },\n      ...\n    ],\n    \"time\":\"2024-03-25T18:48:45.454000128\"\n  },\n  \"retExtInfo\":{},\n  \"time\":\"2024-03-25T18:48:45.454000128\"\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/Bybit/#CryptoAPIs.Bybit.Spot.SymbolInfo.symbol_info","page":"Bybit","title":"CryptoAPIs.Bybit.Spot.SymbolInfo.symbol_info","text":"symbol_info(client::BybitClient, query::SymbolInfoQuery)\nsymbol_info(client::BybitClient = Bybit.Spot.public_client; kw...)\n\nGet the specification of symbol information.\n\nGET /spot/v3/public/symbols\n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Bybit\n\nresult = Bybit.Spot.symbol_info()\n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"retCode\":0,\n  \"retMsg\":\"OK\",\n  \"result\":{\n    \"list\":[\n        {\n          \"alias\":\"BTCUSDT\",\n          \"baseCoin\":\"BTC\",\n          \"basePrecision\":1.0e-6,\n          \"category\":1,\n          \"innovation\":0,\n          \"maxTradeAmt\":2.0e6,\n          \"maxTradeQty\":71.73956243,\n          \"minPricePrecision\":0.01,\n          \"minTradeAmt\":1.0,\n          \"minTradeQty\":4.8e-5,\n          \"name\":\"BTCUSDT\",\n          \"quoteCoin\":\"USDT\",\n          \"quotePrecision\":1.0e-8,\n          \"showStatus\":1\n        },\n      ...\n    ],\n    \"nextPageCursor\":null,\n    \"category\":null\n  },\n  \"retExtInfo\":{},\n  \"time\":\"2024-03-25T18:58:15.868999936\"\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/Bybit/#CryptoAPIs.Bybit.Spot.Ticker.ticker","page":"Bybit","title":"CryptoAPIs.Bybit.Spot.Ticker.ticker","text":"ticker(client::BybitClient, query::TickerQuery)\nticker(client::BybitClient = Bybit.Spot.public_client; kw...)\n\nGET /spot/v3/public/quote/ticker/24hr\n\nParameters:\n\nParameter Type Required Description\nsymbol String false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Bybit\n\nresult = Bybit.Spot.ticker(;\n    symbol = \"ADAUSDT\"\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"retCode\":0,\n  \"retMsg\":\"OK\",\n  \"result\":{\n    \"ap\":0.6636,\n    \"bp\":0.6634,\n    \"h\":0.6687,\n    \"l\":0.6315,\n    \"lp\":0.6633,\n    \"o\":0.6337,\n    \"qv\":1.1594252877069e7,\n    \"s\":\"ADAUSDT\",\n    \"t\":\"2024-03-25T19:05:35.491000064\",\n    \"v\":1.780835204e7\n  },\n  \"retExtInfo\":{},\n  \"time\":\"2024-03-25T19:05:38.912999936\"\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#Binance","page":"Binance","title":"Binance","text":"","category":"section"},{"location":"pages/Binance/","page":"Binance","title":"Binance","text":"CryptoAPIs.Binance.BinanceClient\nCryptoAPIs.Binance.BinanceAPIError","category":"page"},{"location":"pages/Binance/#CryptoAPIs.Binance.BinanceClient","page":"Binance","title":"CryptoAPIs.Binance.BinanceClient","text":"BinanceClient <: AbstractAPIsClient\n\nClient info.\n\nRequired fields\n\nbase_url::String: Base URL for the client. \n\nOptional fields\n\npublic_key::String: Public key for authentication.\nsecret_key::String: Secret key for authentication.\ninterface::String: Interface for the client.\nproxy::String: Proxy information for the client.\naccount_name::String: Account name associated with the client.\ndescription::String: Description of the client.\n\n\n\n\n\n","category":"type"},{"location":"pages/Binance/#CryptoAPIs.Binance.BinanceAPIError","page":"Binance","title":"CryptoAPIs.Binance.BinanceAPIError","text":"BinanceAPIError{T} <: AbstractAPIsError\n\nException thrown when an API method fails with code T.\n\nRequired fields\n\ncode::Int64: Error code.\n\nOptional fields\n\ntype::String: Type of error.\nmsg::String: Error message.\n\n\n\n\n\n","category":"type"},{"location":"pages/Binance/#Spot","page":"Binance","title":"Spot","text":"","category":"section"},{"location":"pages/Binance/","page":"Binance","title":"Binance","text":"CryptoAPIs.Binance.Spot.public_client","category":"page"},{"location":"pages/Binance/#CryptoAPIs.Binance.Spot.public_client","page":"Binance","title":"CryptoAPIs.Binance.Spot.public_client","text":"public_client = BinanceClient(; base_url = \"https://api.binance.com\")\n\n\n\n\n\n","category":"constant"},{"location":"pages/Binance/","page":"Binance","title":"Binance","text":"CryptoAPIs.Binance.Spot.account_trade\nCryptoAPIs.Binance.Spot.avg_price\nCryptoAPIs.Binance.Spot.candle\nCryptoAPIs.Binance.Spot.coin_information\nCryptoAPIs.Binance.Spot.deposit_log\nCryptoAPIs.Binance.Spot.exchange_info\nCryptoAPIs.Binance.Spot.order_book\nCryptoAPIs.Binance.Spot.ticker\nCryptoAPIs.Binance.Spot.withdrawal_log","category":"page"},{"location":"pages/Binance/#CryptoAPIs.Binance.Spot.AccountTrade.account_trade","page":"Binance","title":"CryptoAPIs.Binance.Spot.AccountTrade.account_trade","text":"account_trade(client::BinanceClient, query::AccountTradeQuery)\naccount_trade(client::BinanceClient; kw...)\n\nGet trades for a specific account and symbol.\n\nGET api/v3/myTrades\n\nParameters:\n\nParameter Type Required Description\nsymbol String true \norderId Int64 false \nstartTime DateTime false \nendTime DateTime false \nfromId Int64 false \nlimit Int64 false Default: 1000\nrecvWindow Int64 false \nsignature String false \ntimestamp DateTime false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nbinance_client = BinanceClient(;\n    base_url = \"https://api.binance.com\",\n    public_key = ENV[\"BINANCE_PUBLIC_KEY\"],\n    secret_key = ENV[\"BINANCE_SECRET_KEY\"],\n)\n\nresult = Binance.Spot.account_trade(\n    binance_client;\n    symbol = \"BTCUSDT\",\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"symbol\":\"BNBBTC\",\n    \"id\":28457,\n    \"orderId\":100234,\n    \"orderListId\":-1,\n    \"price\":4.00000100,\n    \"qty\":12.00000000,\n    \"quoteQty\":48.000012,\n    \"commission\":10.10000000,\n    \"commissionAsset\":\"BNB\",\n    \"time\":\"2017-07-12T13:19:09\",\n    \"isBuyer\":true,\n    \"isMaker\":false,\n    \"isBestMatch\":true\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.Spot.AvgPrice.avg_price","page":"Binance","title":"CryptoAPIs.Binance.Spot.AvgPrice.avg_price","text":"avg_price(client::BinanceClient, query::AvgPriceQuery)\navg_price(client::BinanceClient = Binance.Spot.public_client; kw...)\n\nCurrent average price for a symbol.\n\nGET api/v3/avgPrice\n\nParameters:\n\nParameter Type Required Description\nsymbol String true \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.Spot.avg_price(;\n    symbol = \"ADAUSDT\",\n) \n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"mins\":5,\n  \"price\":0.64545824\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.Spot.Candle.candle","page":"Binance","title":"CryptoAPIs.Binance.Spot.Candle.candle","text":"candle(client::BinanceClient, query::CandleQuery)\ncandle(client::BinanceClient = Binance.Spot.public_client; kw...)\n\nKline/candlestick bars for a symbol.\n\nGET api/v3/klines\n\nParameters:\n\nParameter Type Required Description\nsymbol String true \ninterval Period true m1 m3 m5 m15 m30 h1 h2 h4 h6 h8 h12 d1 d3 w1 M1\nendTime DateTime false \nlimit Int64 false \nstartTime DateTime false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.Spot.candle(;\n    symbol = \"ADAUSDT\",\n    interval = Binance.Spot.Candle.M1,\n) \n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"openTime\":\"2018-04-01T00:00:00\",\n    \"openPrice\":0.25551,\n    \"highPrice\":0.3866,\n    \"lowPrice\":0.23983,\n    \"closePrice\":0.34145,\n    \"volume\":1.17451580874e9,\n    \"closeTime\":\"2018-04-30T23:59:59.999000064\",\n    \"quoteAssetVolume\":3.597636214561159e8,\n    \"tradesNumber\":759135,\n    \"takerBuyBaseAssetVolume\":5.556192707e8,\n    \"takerBuyQuoteAssetVolume\":1.706766832130686e8\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.Spot.CoinInformation.coin_information","page":"Binance","title":"CryptoAPIs.Binance.Spot.CoinInformation.coin_information","text":"coin_information(client::BinanceClient, query::CoinInformationQuery)\ncoin_information(client::BinanceClient; kw...)\n\nGet information of coins (available for deposit and withdraw) for user.\n\nGET sapi/v1/capital/config/getall\n\nParameters:\n\nParameter Type Required Description\nrecvWindow Int64 false \nsignature String false \ntimestamp DateTime false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nbinance_client = BinanceClient(;\n    base_url = \"https://api.binance.com\",\n    public_key = ENV[\"BINANCE_PUBLIC_KEY\"],\n    secret_key = ENV[\"BINANCE_SECRET_KEY\"],\n)\n\nresult = Binance.Spot.coin_information(binance_client)\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"coin\":\"ADA\",\n    \"depositAllEnable\":true,\n    \"free\":0.0,\n    \"freeze\":0.0,\n    \"ipoable\":0.0,\n    \"ipoing\":0.0,\n    \"isLegalMoney\":false,\n    \"locked\":0.0,\n    \"name\":\"Cardano\",\n    \"networkList\":[\n      {\n        \"addressRegex\":\"^(([0-9A-Za-z]{57,59})|([0-9A-Za-z]{100,104}))$\",\n        \"addressRule\":null,\n        \"busy\":false,\n        \"coin\":\"ADA\",\n        \"country\":null,\n        \"depositDesc\":\"\",\n        \"depositDust\":1.0e-6,\n        \"depositEnable\":true,\n        \"estimatedArrivalTime\":\"1970-01-01T00:00:00\",\n        \"isDefault\":true,\n        \"memoRegex\":\"\",\n        \"minConfirm\":30,\n        \"name\":\"Cardano\",\n        \"network\":\"ADA\",\n        \"resetAddressStatus\":false,\n        \"sameAddress\":false,\n        \"specialTips\":\"\",\n        \"specialWithdrawTips\":null,\n        \"unLockConfirm\":0,\n        \"withdrawDesc\":\"\",\n        \"withdrawEnable\":true,\n        \"withdrawFee\":0.8,\n        \"withdrawIntegerMultiple\":1.0e-6,\n        \"withdrawMax\":5.0e7,\n        \"withdrawMin\":2.0\n      }\n    ],\n    \"storage\":0.0,\n    \"trading\":true,\n    \"withdrawAllEnable\":true,\n    \"withdrawing\":0.0\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.Spot.DepositLog.deposit_log","page":"Binance","title":"CryptoAPIs.Binance.Spot.DepositLog.deposit_log","text":"deposit_log(client::BinanceClient, query::DepositLogQuery)\ndeposit_log(client::BinanceClient; kw...)\n\nFetch deposit history.\n\nGET sapi/v1/capital/withdraw/history\n\nParameters:\n\nParameter Type Required Description\ncoin String false \nendTime DateTime false \nlimit Int64 false Default: 1000\noffset Int64 false \nstartTime DateTime false \nstatus DepositStatus false PENDING (0), SUCCESS (1), CREDITED_BUT_CANNOT_WITHDRAW (6), WRONG_DEPOSIT (7), WAITING_USER_CONFIRM (8)\ntxId String false \nrecvWindow Int64 false \ntimestamp DateTime false \nsignature String false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nbinance_client = BinanceClient(;\n    base_url = \"https://api.binance.com\",\n    public_key = ENV[\"BINANCE_PUBLIC_KEY\"],\n    secret_key = ENV[\"BINANCE_SECRET_KEY\"],\n)\n\nresult = Binance.Spot.deposit_log(binance_client)\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"id\":769800519366885376,\n    \"amount\":0.001,\n    \"coin\":\"BNB\",\n    \"network\":\"BNB\",\n    \"status\":0,\n    \"address\":\"bnb136ns6lfw4zs5hg4n85vdthaad7hq5m4gtkgf23\",\n    \"addressTag\":\"101764890\",\n    \"txId\":\"98A3EA560C6B3336D348B6C83F0F95ECE4F1F5919E94BD006E5BF3BF264FACFC\",\n    \"insertTime\":\"2022-08-26T05:52:26\",\n    \"transferType\":0,\n    \"confirmTimes\":\"1/1\",\n    \"unlockConfirm\":0,\n    \"walletType\":0\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.Spot.ExchangeInfo.exchange_info","page":"Binance","title":"CryptoAPIs.Binance.Spot.ExchangeInfo.exchange_info","text":"exchange_info(client::BinanceClient, query::ExchangeInfoQuery)\nexchange_info(client::BinanceClient = Binance.Spot.public_client; kw...)\n\nCurrent exchange trading rules and symbol information.\n\nGET api/v3/exchangeInfo\n\nParameters:\n\nParameter Type Required Description\npermissions Vector false SPOT MARGIN LEVERAGED TRD_GRP_002 TRD_GRP_003 TRD_GRP_004 TRD_GRP_005 TRD_GRP_006 TRD_GRP_007\nsymbol String false \nsymbols Vector false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.Spot.exchange_info(;\n    symbol = \"ADAUSDT\"\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"exchangeFilters\":[],\n  \"rateLimits\":[\n    {\n      \"limit\":6000,\n      \"rateLimitType\":\"REQUEST_WEIGHT\",\n      \"interval\":\"MINUTE\",\n      \"intervalNum\":1\n    },\n    ...\n  ],\n  \"serverTime\":\"2024-04-01T09:35:01.003000064\",\n  \"symbols\":[\n    {\n      \"allowTrailingStop\":true,\n      \"allowedSelfTradePreventionModes\":[\n        \"EXPIRE_TAKER\",\n        \"EXPIRE_MAKER\",\n        \"EXPIRE_BOTH\"\n      ],\n      \"baseAsset\":\"ADA\",\n      \"baseAssetPrecision\":8,\n      \"baseCommissionPrecision\":8,\n      \"cancelReplaceAllowed\":true,\n      \"defaultSelfTradePreventionMode\":\"EXPIRE_MAKER\",\n      \"filters\":[\n        {\n          \"applyToMarket\":null,\n          \"askMultiplierDown\":null,\n          \"askMultiplierUp\":null,\n          \"avgPriceMins\":null,\n          \"bidMultiplierDown\":null,\n          \"bidMultiplierUp\":null,\n          \"filterType\":\"PRICE_FILTER\",\n          \"limit\":null,\n          \"maxNumAlgoOrders\":null,\n          \"maxNumOrders\":null,\n          \"maxPosition\":null,\n          \"maxPrice\":1000.0,\n          \"maxQty\":null,\n          \"maxTrailingAboveDelta\":null,\n          \"maxTrailingBelowDelta\":null,\n          \"minNotional\":null,\n          \"minPrice\":0.0001,\n          \"minQty\":null,\n          \"minTrailingAboveDelta\":null,\n          \"minTrailingBelowDelta\":null,\n          \"multiplierDown\":null,\n          \"multiplierUp\":null,\n          \"stepSize\":null,\n          \"tickSize\":0.0001\n        },\n        ...\n      ],\n      \"icebergAllowed\":true,\n      \"isMarginTradingAllowed\":true,\n      \"isSpotTradingAllowed\":true,\n      \"ocoAllowed\":true,\n      \"orderTypes\":[\n        \"LIMIT\",\n        \"LIMIT_MAKER\",\n        \"MARKET\",\n        \"STOP_LOSS_LIMIT\",\n        \"TAKE_PROFIT_LIMIT\"\n      ],\n      \"permissions\":[\n        \"SPOT\",\n        \"MARGIN\",\n        \"TRD_GRP_004\",\n        ...\n      ],\n      \"quoteAsset\":\"USDT\",\n      \"quoteAssetPrecision\":8,\n      \"quoteCommissionPrecision\":8,\n      \"quoteOrderQtyMarketAllowed\":true,\n      \"quotePrecision\":8,\n      \"status\":\"TRADING\",\n      \"symbol\":\"ADAUSDT\"\n    }\n  ],\n  \"timezone\":\"UTC\"\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.Spot.OrderBook.order_book","page":"Binance","title":"CryptoAPIs.Binance.Spot.OrderBook.order_book","text":"order_book(client::BinanceClient, query::OrderBookQuery)\norder_book(client::BinanceClient = Binance.Spot.public_client; kw...)\n\nGET api/v3/depth\n\nParameters:\n\nParameter Type Required Description\nsymbol String true \nlimit Int64 false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.Spot.order_book(;\n    symbol = \"ADAUSDT\"\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"asks\":[\n    {\n      \"price\":0.634,\n      \"size\":1478.6\n    },\n    ...\n  ],\n  \"bids\":[\n    {\n      \"price\":0.6339,\n      \"size\":28448.6\n    },\n    ...\n  ],\n  \"lastUpdateId\":8394873195\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.Spot.Ticker.ticker","page":"Binance","title":"CryptoAPIs.Binance.Spot.Ticker.ticker","text":"ticker(client::BinanceClient, query::TickerQuery)\nticker(client::BinanceClient = Binance.Spot.public_client; kw...)\n\n24 hour rolling window price change statistics.\n\nGET api/v3/ticker/24hr\n\nParameters:\n\nParameter Type Required Description\nsymbol String false \nsymbols Vector{String} false \ntype String false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.Spot.ticker(;\n    symbol = \"ADAUSDT\",\n) \n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"symbol\":\"ADAUSDT\",\n  \"askPrice\":0.631,\n  \"askQty\":53.4,\n  \"bidPrice\":0.6309,\n  \"bidQty\":23714.9,\n  \"closeTime\":\"2024-03-21T14:04:37.151000064\",\n  \"count\":265067,\n  \"firstId\":482014355,\n  \"highPrice\":0.6459,\n  \"lastId\":482279421,\n  \"lastPrice\":0.631,\n  \"lastQty\":1282.0,\n  \"lowPrice\":0.5757,\n  \"openPrice\":0.6048,\n  \"openTime\":\"2024-03-20T14:04:37.151000064\",\n  \"prevClosePrice\":0.6048,\n  \"priceChange\":0.0262,\n  \"priceChangePercent\":4.332,\n  \"quoteVolume\":1.363472992331e8,\n  \"volume\":2.185537682e8,\n  \"weightedAvgPrice\":0.62386158\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.Spot.WithdrawalLog.withdrawal_log","page":"Binance","title":"CryptoAPIs.Binance.Spot.WithdrawalLog.withdrawal_log","text":"withdrawal_log(client::BinanceClient, query::WithdrawalLogQuery)\nwithdrawal_log(client::BinanceClient; kw...)\n\nFetch withdraw history.\n\nGET sapi/v1/capital/withdraw/history\n\nParameters:\n\nParameter Type Required Description\ncoin String false \nendTime DateTime false \nlimit Int64 false Default: 1000\noffset Int64 false \nstartTime DateTime false \nstatus WithdrawStatus false EMAIL_SENT (0), CANCELLED (1), AWAITING_APPROVAL (2), REJECTED (3), PROCESSING (4), FAILURE (5), COMPLETED (6)\nwithdrawOrderId String false \nrecvWindow Int64 false \nsignature String false \ntimestamp DateTime false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nbinance_client = BinanceClient(;\n    base_url = \"https://api.binance.com\",\n    public_key = ENV[\"BINANCE_PUBLIC_KEY\"],\n    secret_key = ENV[\"BINANCE_SECRET_KEY\"],\n)\n\nresult = Binance.Spot.withdrawal_log(binance_client)\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"id\":\"b6ae22b3aa844210a7041aee7589627c\",\n    \"amount\":8.91000000,\n    \"transactionFee\":0.004,\n    \"coin\":\"USDT\",\n    \"status\":6,\n    \"address\":\"0x94df8b352de7f46f64b01d3666bf6e936e44ce60\",\n    \"txId\":\"0xb5ef8c13b968a406cc62a93a8bd80f9e9a906ef1b3fcf20a2e48573c17659268\"\n    \"applyTime\":\"2019-10-12T11:12:02\",\n    \"network\":\"ETH\",\n    \"transferType\":0,\n    \"info\":\"\",\n    \"confirmNo\":3,\n    \"walletType\":1,\n    \"txKey\":\"\",\n    \"completeTime\":\"2023-03-23T16:52:41\"\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#USDMFutures","page":"Binance","title":"USDMFutures","text":"","category":"section"},{"location":"pages/Binance/","page":"Binance","title":"Binance","text":"CryptoAPIs.Binance.USDMFutures.public_client","category":"page"},{"location":"pages/Binance/#CryptoAPIs.Binance.USDMFutures.public_client","page":"Binance","title":"CryptoAPIs.Binance.USDMFutures.public_client","text":"public_client = BinanceClient(; base_url = \"https://fapi.binance.com\")\n\n\n\n\n\n","category":"constant"},{"location":"pages/Binance/","page":"Binance","title":"Binance","text":"CryptoAPIs.Binance.USDMFutures.candle\nCryptoAPIs.Binance.USDMFutures.continuous_candle\nCryptoAPIs.Binance.USDMFutures.exchange_info\nCryptoAPIs.Binance.USDMFutures.funding_rate\nCryptoAPIs.Binance.USDMFutures.long_short_ratio\nCryptoAPIs.Binance.USDMFutures.open_interest_hist\nCryptoAPIs.Binance.USDMFutures.order_book\nCryptoAPIs.Binance.USDMFutures.premium_index\nCryptoAPIs.Binance.USDMFutures.taker_long_short_ratio\nCryptoAPIs.Binance.USDMFutures.ticker\nCryptoAPIs.Binance.USDMFutures.top_long_short_account_ratio\nCryptoAPIs.Binance.USDMFutures.top_long_short_position_ratio","category":"page"},{"location":"pages/Binance/#CryptoAPIs.Binance.USDMFutures.Candle.candle","page":"Binance","title":"CryptoAPIs.Binance.USDMFutures.Candle.candle","text":"candle(client::BinanceClient, query::CandleQuery)\ncandle(client::BinanceClient = Binance.USDMFutures.public_client; kw...)\n\nKline/candlestick bars for a symbol.\n\nWrapper for method: GET fapi/v3/klines.\n\nParameters:\n\nParameter Type Required Description\nsymbol String true \ninterval TimeInterval true m1 m3 m5 m15 m30 h1 h2 h4 h6 h8 h12 d1 d3 w1 M1\nendTime DateTime false \nlimit Int64 false \nstartTime DateTime false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.USDMFutures.candle(;\n    symbol = \"ADAUSDT\",\n    interval = Binance.USDMFutures.Candle.M1,\n) \n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"openTime\":\"2020-01-01T00:00:00\",\n    \"openPrice\":0.0545,\n    \"highPrice\":0.05559,\n    \"lowPrice\":0.05209,\n    \"closePrice\":0.05387,\n    \"volume\":2.44632854e8,\n    \"closeTime\":\"2020-01-31T23:59:59.999000064\",\n    \"quoteAssetVolume\":1.313060288191e7,\n    \"tradesNumber\":40186,\n    \"takerBuyBaseAssetVolume\":1.16954492e8,\n    \"takerBuyQuoteAssetVolume\":6.28735588554e6\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.USDMFutures.ContinuousCandle.continuous_candle","page":"Binance","title":"CryptoAPIs.Binance.USDMFutures.ContinuousCandle.continuous_candle","text":"continuous_candle(client::BinanceClient, query::ContinuousCandleQuery)\ncontinuous_candle(client::BinanceClient = Binance.USDMFutures.public_client; kw...)\n\nKline/candlestick bars for a specific contract type.\n\nGET fapi/v1/continuousKlines\n\nParameters:\n\nParameter Type Required Description\npair String true \ncontractType ContractType true PERPETUAL CURRENT_QUARTER NEXT_QUARTER\ninterval TimeInterval true m1 m3 m5 m15 m30 h1 h2 h4 h6 h8 h12 d1 d3 w1 M1\nendTime DateTime false \nlimit Int64 false \nstartTime DateTime false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.USDMFutures.continuous_candle(;\n    pair = \"BTCUSDT\",\n    contractType = Binance.USDMFutures.ContinuousCandle.PERPETUAL,\n    interval = Binance.USDMFutures.ContinuousCandle.M1,\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"openTime\":\"2019-09-01T00:00:00\",\n    \"openPrice\":8042.08,\n    \"highPrice\":10475.54,\n    \"lowPrice\":7700.67,\n    \"closePrice\":8041.96,\n    \"volume\":608742.1109999999,\n    \"closeTime\":\"2019-09-30T23:59:59.999000064\",\n    \"quoteAssetVolume\":5.61187924896223e9,\n    \"tradesNumber\":998055,\n    \"takerBuyVolume\":298326.244,\n    \"takerBuyQuoteAssetVolume\":2.7368038906708302e9\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.USDMFutures.ExchangeInfo.exchange_info","page":"Binance","title":"CryptoAPIs.Binance.USDMFutures.ExchangeInfo.exchange_info","text":"exchange_info(client::BinanceClient, query::ExchangeInfoQuery)\nexchange_info(client::BinanceClient = Binance.USDMFutures.public_client; kw...)\n\nCurrent exchange trading rules and symbol information.\n\nGET fapi/v1/exchangeInfo\n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.USDMFutures.exchange_info() \n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"futuresType\":\"U_MARGINED\",\n  \"symbols\":\n  [\n    {\n    \"baseAsset\":\"BTC\",\n    \"baseAssetPrecision\":8,\n    \"contractType\":\"PERPETUAL\",\n    \"deliveryDate\":\"2100-12-25T08:00:00\",\n    \"filters\":[\n      {\n        \"filterType\":\"PRICE_FILTER\",\n        \"limit\":null,\n        \"maxPrice\":4.529764e6,\n        \"maxQty\":null,\n        \"minPrice\":556.8,\n        \"minQty\":null,\n        \"multiplierDecimal\":null,\n        \"multiplierDown\":null,\n        \"multiplierUp\":null,\n        \"notional\":null,\n        \"stepSize\":null,\n        \"tickSize\":0.1\n      },\n      ...\n    ],\n    \"liquidationFee\":0.0125,\n    \"maintMarginPercent\":2.5,\n    \"marginAsset\":\"USDT\",\n    \"marketTakeBound\":0.05,\n    \"maxMoveOrderLimit\":10000,\n    \"onboardDate\":\"2019-09-25T08:00:00\",\n    \"orderTypes\":[\n      \"LIMIT\",\n      \"MARKET\",\n      \"STOP\",\n      \"STOP_MARKET\",\n      \"TAKE_PROFIT\",\n      \"TAKE_PROFIT_MARKET\",\n      \"TRAILING_STOP_MARKET\"\n    ],\n    \"pair\":\"BTCUSDT\",\n    \"pricePrecision\":2,\n    \"quantityPrecision\":3,\n    \"quoteAsset\":\"USDT\",\n    \"quotePrecision\":8,\n    \"requiredMarginPercent\":5.0,\n    \"settlePlan\":0,\n    \"status\":\"TRADING\",\n    \"symbol\":\"BTCUSDT\",\n    \"timeInForce\":[\n      \"GTC\",\n      \"IOC\",\n      \"FOK\",\n      \"GTX\",\n      \"GTD\"\n    ],\n    \"triggerProtect\":0.05,\n    \"underlyingSubType\":[\n      \"PoW\"\n    ],\n    \"underlyingType\":\"COIN\"\n    },\n    ...\n  ]\n  \"assets\":\n  [\n    {\n    \"asset\":\"USDT\",\n    \"autoAssetExchange\":-10000.0,\n    \"marginAvailable\":true\n    },\n    ...\n  ]\n  \"serverTime\":\"2024-03-21T20:00:09.139000064\",\n  \"exchangeFilters\":null,\n  \"timezone\":\"UTC\",\n  \"rateLimits\":\n  [\n    {\n    \"interval\":\"MINUTE\",\n    \"intervalNum\":1,\n    \"limit\":2400,\n    \"rateLimitType\":\"REQUEST_WEIGHT\"\n    },\n    ...\n  ]\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.USDMFutures.FundingRate.funding_rate","page":"Binance","title":"CryptoAPIs.Binance.USDMFutures.FundingRate.funding_rate","text":"funding_rate(client::BinanceClient, query::FundingRateQuery)\nfunding_rate(client::BinanceClient = Binance.USDMFutures.public_client; kw...)\n\nGet funding rate history.\n\nGET fapi/v1/fundingRate\n\nParameters:\n\nParameter Type Required Description\nsymbol String true \nendTime DateTime false \nlimit Int64 false \nstartTime DateTime false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.USDMFutures.funding_rate(;\n    symbol = \"BTCUSDT\",\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"symbol\":\"BTCUSDT\",\n    \"fundingRate\":0.00011242,\n    \"fundingTime\":\"2024-02-21T08:00:00\",\n    \"markPrice\":51595.13521986\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.USDMFutures.LongShortRatio.long_short_ratio","page":"Binance","title":"CryptoAPIs.Binance.USDMFutures.LongShortRatio.long_short_ratio","text":"long_short_ratio(client::BinanceClient, query::LongShortRatioQuery)\nlong_short_ratio(client::BinanceClient = Binance.USDMFutures.public_client; kw...)\n\nGET futures/data/globalLongShortAccountRatio\n\nParameters:\n\nParameter Type Required Description\nsymbol String true \nperiod TimeInterval true m5 m15 m30 h1 h2 h4 h6 h12 d1\nendTime DateTime false \nlimit Int64 false Default: 30, Max: 500\nstartTime DateTime false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.USDMFutures.long_short_ratio(;\n    symbol = \"BTCUSDT\",\n    period = Binance.USDMFutures.LongShortRatio.h1,\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"symbol\":\"BTCUSDT\",\n    \"longShortRatio\":1.3305,\n    \"longAccount\":0.5709,\n    \"shortAccount\":0.4291,\n    \"timestamp\":\"2024-03-29T12:00:00\"\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.USDMFutures.OpenInterestHist.open_interest_hist","page":"Binance","title":"CryptoAPIs.Binance.USDMFutures.OpenInterestHist.open_interest_hist","text":"open_interest_hist(client::BinanceClient, query::OpenInterestHistQuery)\nopen_interest_hist(client::BinanceClient = Binance.USDMFutures.public_client; kw...)\n\nGET futures/data/openInterestHist\n\nParameters:\n\nParameter Type Required Description\nsymbol String true \nperiod TimeInterval true m5 m15 m30 h1 h2 h4 h6 h12 d1\nendTime DateTime false \nlimit Int64 false Default: 30, Max: 500\nstartTime DateTime false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.USDMFutures.open_interest_hist(;\n    symbol = \"BTCUSDT\",\n    period = Binance.USDMFutures.OpenInterestHist.h1,\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"symbol\":\"BTCUSDT\",\n    \"sumOpenInterest\":81737.468,\n    \"sumOpenInterestValue\":5.730969977716018e9,\n    \"timestamp\":\"2024-03-29T15:00:00\"\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.USDMFutures.OrderBook.order_book","page":"Binance","title":"CryptoAPIs.Binance.USDMFutures.OrderBook.order_book","text":"order_book(client::BinanceClient, query::OrderBookQuery)\norder_book(client::BinanceClient = Binance.USDMFutures.public_client; kw...)\n\nGET fapi/v1/depth\n\nParameters:\n\nParameter Type Required Description\nsymbol String true \nlimit Int64 false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.USDMFutures.order_book(;\n    symbol = \"ADAUSDT\"\n) \n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"T\":\"2024-03-21T21:25:53.671000064\",\n  \"E\":\"2024-03-21T21:25:53.680999936\",\n  \"asks\":[\n    {\n      \"price\":0.6337,\n      \"size\":20325.0\n    },\n    ...\n  ],\n  \"lastUpdateId\":4248628084740,\n  \"bids\":[\n    {\n      \"price\":0.6336,\n      \"size\":58607.0\n    },\n    ...\n  ]\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.USDMFutures.PremiumIndex.premium_index","page":"Binance","title":"CryptoAPIs.Binance.USDMFutures.PremiumIndex.premium_index","text":"premium_index(client::BinanceClient, query::PremiumIndexQuery)\npremium_index(client::BinanceClient = Binance.USDMFutures.public_client; kw...)\n\nGET fapi/v1/premiumIndex\n\nParameters:\n\nParameter Type Required Description\nsymbol String false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.USDMFutures.premium_index(;\n    symbol = \"BTCUSDT\",\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"symbol\":\"BTCUSDT\",\n  \"markPrice\":70901.2,\n  \"indexPrice\":70794.23404255,\n  \"estimatedSettlePrice\":70699.56121556,\n  \"lastFundingRate\":0.000442,\n  \"interestRate\":0.0001,\n  \"nextFundingTime\":\"2024-04-01T00:00:00\",\n  \"time\":\"2024-03-31T19:00:35\"\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.USDMFutures.TakerLongShortRatio.taker_long_short_ratio","page":"Binance","title":"CryptoAPIs.Binance.USDMFutures.TakerLongShortRatio.taker_long_short_ratio","text":"taker_long_short_ratio(client::BinanceClient, query::TakerLongShortRatioQuery)\ntaker_long_short_ratio(client::BinanceClient = Binance.USDMFutures.public_client; kw...)\n\nGET futures/data/takerlongshortRatio\n\nParameters:\n\nParameter Type Required Description\nsymbol String true \nperiod TimeInterval true m5 m15 m30 h1 h2 h4 h6 h12 d1\nendTime DateTime false \nlimit Int64 false Default: 30, Max: 500\nstartTime DateTime false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.USDMFutures.taker_long_short_ratio(;\n    symbol = \"BTCUSDT\",\n    period = Binance.USDMFutures.TakerLongShortRatio.h1,\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"buySellRatio\":0.6366,\n    \"buyVol\":1277.042,\n    \"sellVol\":2005.878,\n    \"timestamp\":\"2024-03-30T14:00:00\"\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.USDMFutures.Ticker.ticker","page":"Binance","title":"CryptoAPIs.Binance.USDMFutures.Ticker.ticker","text":"ticker(client::BinanceClient, query::TickerQuery)\nticker(client::BinanceClient = Binance.USDMFutures.public_client; kw...)\n\n24 hour rolling window price change statistics.\n\nGET fapi/v1/ticker/24hr\n\nParameters:\n\nParameter Type Required Description\nsymbol String false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.USDMFutures.ticker(;\n    symbol = \"ADAUSDT\",\n) \n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"closeTime\":\"2024-03-21T21:40:44.384999936\",\n  \"count\":952934,\n  \"firstId\":1090483662,\n  \"highPrice\":0.649,\n  \"lastId\":1091436596,\n  \"lastPrice\":0.631,\n  \"lastQty\":1000.0,\n  \"lowPrice\":0.6182,\n  \"openPrice\":0.6389,\n  \"openTime\":\"2024-03-20T21:40:00\",\n  \"priceChange\":-0.0079,\n  \"priceChangePercent\":-1.237,\n  \"quoteVolume\":4.378010427731e8,\n  \"symbol\":\"ADAUSDT\",\n  \"volume\":6.89939719e8,\n  \"weightedAvgPrice\":0.63455\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.USDMFutures.TopLongShortAccountRatio.top_long_short_account_ratio","page":"Binance","title":"CryptoAPIs.Binance.USDMFutures.TopLongShortAccountRatio.top_long_short_account_ratio","text":"top_long_short_account_ratio(client::BinanceClient, query::TopLongShortAccountRatioQuery)\ntop_long_short_account_ratio(client::BinanceClient = Binance.USDMFutures.public_client; kw...)\n\nGET futures/data/topLongShortAccountRatio\n\nParameters:\n\nParameter Type Required Description\nsymbol String true \nperiod TimeInterval true m5 m15 m30 h1 h2 h4 h6 h12 d1\nendTime DateTime false \nlimit Int64 false Default: 30, Max: 500\nstartTime DateTime false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.USDMFutures.top_long_short_account_ratio(;\n    symbol = \"BTCUSDT\",\n    period = Binance.USDMFutures.TopLongShortAccountRatio.h1,\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"symbol\":\"BTCUSDT\",\n    \"longShortRatio\":1.5189,\n    \"longAccount\":0.603,\n    \"shortAccount\":0.397,\n    \"timestamp\":\"2024-03-30T15:00:00\"\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.USDMFutures.TopLongShortPositionRatio.top_long_short_position_ratio","page":"Binance","title":"CryptoAPIs.Binance.USDMFutures.TopLongShortPositionRatio.top_long_short_position_ratio","text":"top_long_short_position_ratio(client::BinanceClient, query::TopLongShortPositionRatioQuery)\ntop_long_short_position_ratio(client::BinanceClient = Binance.USDMFutures.public_client; kw...)\n\nGET futures/data/topLongShortPositionRatio\n\nParameters:\n\nParameter Type Required Description\nsymbol String true \nperiod TimeInterval true m5 m15 m30 h1 h2 h4 h6 h12 d1\nendTime DateTime false \nlimit Int64 false Default: 30, Max: 500\nstartTime DateTime false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.USDMFutures.top_long_short_position_ratio(;\n    symbol = \"BTCUSDT\",\n    period = Binance.USDMFutures.TopLongShortPositionRatio.h1,\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"symbol\":\"BTCUSDT\",\n    \"longShortRatio\":1.3855,\n    \"longAccount\":0.5808,\n    \"shortAccount\":0.4192,\n    \"timestamp\":\"2024-03-30T15:00:00\"\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CoinMFutures","page":"Binance","title":"CoinMFutures","text":"","category":"section"},{"location":"pages/Binance/","page":"Binance","title":"Binance","text":"CryptoAPIs.Binance.CoinMFutures.public_client","category":"page"},{"location":"pages/Binance/#CryptoAPIs.Binance.CoinMFutures.public_client","page":"Binance","title":"CryptoAPIs.Binance.CoinMFutures.public_client","text":"public_client = BinanceClient(; base_url = \"https://dapi.binance.com\")\n\n\n\n\n\n","category":"constant"},{"location":"pages/Binance/","page":"Binance","title":"Binance","text":"CryptoAPIs.Binance.CoinMFutures.candle\nCryptoAPIs.Binance.CoinMFutures.continuous_candle\nCryptoAPIs.Binance.CoinMFutures.exchange_info\nCryptoAPIs.Binance.CoinMFutures.funding_rate\nCryptoAPIs.Binance.CoinMFutures.income_log\nCryptoAPIs.Binance.CoinMFutures.order_book\nCryptoAPIs.Binance.CoinMFutures.premium_index\nCryptoAPIs.Binance.CoinMFutures.ticker","category":"page"},{"location":"pages/Binance/#CryptoAPIs.Binance.CoinMFutures.Candle.candle","page":"Binance","title":"CryptoAPIs.Binance.CoinMFutures.Candle.candle","text":"candle(client::BinanceClient, query::CandleQuery)\ncandle(client::BinanceClient = Binance.CoinMFutures.public_client; kw...)\n\nKline/candlestick bars for a symbol.\n\nGET dapi/v1/klines\n\nParameters:\n\nParameter Type Required Description\nsymbol String true \ninterval Period true m1 m3 m5 m15 m30 h1 h2 h4 h6 h8 h12 d1 d3 w1 M1\nendTime DateTime false \nlimit Int64 false \nstartTime DateTime false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.CoinMFutures.candle(;\n    symbol = \"ADAUSD_PERP\",\n    interval = Binance.CoinMFutures.Candle.M1,\n) \n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"openTime\":\"2023-10-01T00:00:00\",\n    \"openPrice\":0.2538,\n    \"highPrice\":0.3049,\n    \"lowPrice\":0.2387,\n    \"closePrice\":0.2931,\n    \"volume\":3.1780325e7,\n    \"closeTime\":\"2023-10-31T23:59:59.999000064\",\n    \"baseAssetVolume\":1.189509044956558e9,\n    \"tradesNumber\":795986,\n    \"takerBuyVolume\":1.5506238e7,\n    \"takerBuyBaseAssetVolume\":5.799281977142488e8\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.CoinMFutures.ContinuousCandle.continuous_candle","page":"Binance","title":"CryptoAPIs.Binance.CoinMFutures.ContinuousCandle.continuous_candle","text":"continuous_candle(client::BinanceClient, query::ContinuousCandleQuery)\ncontinuous_candle(client::BinanceClient = Binance.CoinMFutures.public_client; kw...)\n\nKline/candlestick bars for a specific contract type.\n\nGET dapi/v1/continuousKlines\n\nParameters:\n\nParameter Type Required Description\npair String true \ncontractType ContractType true PERPETUAL CURRENT_QUARTER NEXT_QUARTER\ninterval TimeInterval true \nendTime DateTime false \nlimit Int64 false \nstartTime DateTime false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.CoinMFutures.continuous_candle(;\n    pair = \"BTCUSD\",\n    contractType = Binance.CoinMFutures.ContinuousCandle.PERPETUAL,\n    interval = Binance.CoinMFutures.ContinuousCandle.M1,\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n[       \n {\n    \"openTime\":\"2023-10-01T00:00:00\",\n    \"openPrice\":26957.3,\n    \"highPrice\":35811.9,\n    \"lowPrice\":26516.7,\n    \"closePrice\":34679.8,\n    \"volume\":4.49110256e8,\n    \"closeTime\":\"2023-10-31T23:59:59.999000064\",\n    \"baseAssetVolume\":1.50363571181441e6,\n    \"tradesNumber\":11775107,\n    \"takerBuyVolume\":2.24708613e8,\n    \"takerBuyBaseAssetVolume\":752475.86725638\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.CoinMFutures.ExchangeInfo.exchange_info","page":"Binance","title":"CryptoAPIs.Binance.CoinMFutures.ExchangeInfo.exchange_info","text":"exchange_info(client::BinanceClient, query::ExchangeInfoQuery)\nexchange_info(client::BinanceClient = Binance.CoinMFutures.public_client; kw...)\n\nCurrent exchange trading rules and symbol information.\n\nGET dapi/v1/exchangeInfo\n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.CoinMFutures.exchange_info() \n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"symbols\":[\n    {\n      \"baseAsset\":\"BTC\",\n      \"baseAssetPrecision\":8,\n      \"contractSize\":100,\n      \"contractStatus\":\"TRADING\",\n      \"contractType\":\"PERPETUAL\",\n      \"deliveryDate\":\"2100-12-25T08:00:00\",\n      \"equalQtyPrecision\":4,\n      \"filters\":[\n        {\n          \"filterType\":\"PRICE_FILTER\",\n          \"limit\":null,\n          \"maxPrice\":4.520958e6,\n          \"maxQty\":null,\n          \"minPrice\":1000.0,\n          \"minQty\":null,\n          \"multiplierDecimal\":null,\n          \"multiplierDown\":null,\n          \"multiplierUp\":null,\n          \"notional\":null,\n          \"stepSize\":null,\n          \"tickSize\":0.1\n        },\n        {\n          \"filterType\":\"LOT_SIZE\",\n          \"limit\":null,\n          \"maxPrice\":null,\n          \"maxQty\":1.0e6,\n          \"minPrice\":null,\n          \"minQty\":1.0,\n          \"multiplierDecimal\":null,\n          \"multiplierDown\":null,\n          \"multiplierUp\":null,\n          \"notional\":null,\n          \"stepSize\":1.0,\n          \"tickSize\":null\n        },\n        {\n          \"filterType\":\"MARKET_LOT_SIZE\",\n          \"limit\":null,\n          \"maxPrice\":null,\n          \"maxQty\":60000.0,\n          \"minPrice\":null,\n          \"minQty\":1.0,\n          \"multiplierDecimal\":null,\n          \"multiplierDown\":null,\n          \"multiplierUp\":null,\n          \"notional\":null,\n          \"stepSize\":1.0,\n          \"tickSize\":null\n        },\n        {\n          \"filterType\":\"MAX_NUM_ORDERS\",\n          \"limit\":200,\n          \"maxPrice\":null,\n          \"maxQty\":null,\n          \"minPrice\":null,\n          \"minQty\":null,\n          \"multiplierDecimal\":null,\n          \"multiplierDown\":null,\n          \"multiplierUp\":null,\n          \"notional\":null,\n          \"stepSize\":null,\n          \"tickSize\":null\n        },\n        {\n          \"filterType\":\"MAX_NUM_ALGO_ORDERS\",\n          \"limit\":20,\n          \"maxPrice\":null,\n          \"maxQty\":null,\n          \"minPrice\":null,\n          \"minQty\":null,\n          \"multiplierDecimal\":null,\n          \"multiplierDown\":null,\n          \"multiplierUp\":null,\n          \"notional\":null,\n          \"stepSize\":null,\n          \"tickSize\":null\n        },\n        {\n          \"filterType\":\"PERCENT_PRICE\",\n          \"limit\":null,\n          \"maxPrice\":null,\n          \"maxQty\":null,\n          \"minPrice\":null,\n          \"minQty\":null,\n          \"multiplierDecimal\":4.0,\n          \"multiplierDown\":0.95,\n          \"multiplierUp\":1.05,\n          \"notional\":null,\n          \"stepSize\":null,\n          \"tickSize\":null\n        }\n      ],\n      \"liquidationFee\":0.015,\n      \"maintMarginPercent\":2.5,\n      \"marginAsset\":\"BTC\",\n      \"marketTakeBound\":0.05,\n      \"maxMoveOrderLimit\":10000,\n      \"onboardDate\":\"2020-08-10T07:00:00\",\n      \"orderTypes\":[\n        \"LIMIT\",\n        \"MARKET\",\n        \"STOP\",\n        \"STOP_MARKET\",\n        \"TAKE_PROFIT\",\n        \"TAKE_PROFIT_MARKET\",\n        \"TRAILING_STOP_MARKET\"\n      ],\n      \"pair\":\"BTCUSD\",\n      \"pricePrecision\":1,\n      \"quantityPrecision\":0,\n      \"quoteAsset\":\"USD\",\n      \"quotePrecision\":8,\n      \"requiredMarginPercent\":5.0,\n      \"symbol\":\"BTCUSD_PERP\",\n      \"timeInForce\":[\n        \"GTC\",\n        \"IOC\",\n        \"FOK\",\n        \"GTX\"\n      ],\n      \"triggerProtect\":0.05,\n      \"underlyingSubType\":[\n        \"PoW\"\n      ],\n      \"underlyingType\":\"COIN\"\n    },\n    ...\n  ],\n  \"serverTime\":\"2024-03-21T22:00:07.956\",\n  \"exchangeFilters\":null,\n  \"timezone\":\"UTC\",\n  \"rateLimits\":[\n    {\n      \"interval\":\"MINUTE\",\n      \"intervalNum\":1,\n      \"limit\":2400,\n      \"rateLimitType\":\"REQUEST_WEIGHT\"\n    },\n    ...\n  ]\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.CoinMFutures.FundingRate.funding_rate","page":"Binance","title":"CryptoAPIs.Binance.CoinMFutures.FundingRate.funding_rate","text":"funding_rate(client::BinanceClient, query::FundingRateQuery)\nfunding_rate(client::BinanceClient = Binance.CoinMFutures.public_client; kw...)\n\nGET /dapi/v1/fundingRate\n\nParameters:\n\nParameter Type Required Description\nsymbol String true \nendTime DateTime false \nlimit Int64 false \nstartTime DateTime false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.CoinMFutures.funding_rate(;\n    symbol = \"BTCUSD_PERP\",\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n {\n    \"symbol\":\"BTCUSD_PERP\",\n    \"fundingTime\":\"2024-02-22T16:00:00\",\n    \"fundingRate\":0.00034808,\n    \"markPrice\":51610.0\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.CoinMFutures.IncomeLog.income_log","page":"Binance","title":"CryptoAPIs.Binance.CoinMFutures.IncomeLog.income_log","text":"income_log(client::BinanceClient, query::IncomeLogQuery)\nincome_log(client::BinanceClient; kw...)\n\nGET dapi/v1/income\n\nParameters:\n\nParameter Type Required Description\nsymbol String false \nincomeType String false \nstartTime DateTime false \nendTime DateTime false \nlimit Int64 false \nrecvWindow Int64 false \ntimestamp DateTime false \nsignature String false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nbinance_client = BinanceClient(;\n    base_url = \"https://dapi.binance.com\",\n    public_key = ENV[\"BINANCE_PUBLIC_KEY\"],\n    secret_key = ENV[\"BINANCE_SECRET_KEY\"],\n)\n\nresult = Binance.CoinMFutures.income_log(\n    binance_client\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"symbol\":\"ETHUSD_PERP\",\n    \"incomeType\":\"FUNDING_FEE\",\n    \"info\":null,\n    \"income\":1.2e-7,\n    \"asset\":\"ETH\",\n    \"time\":\"2023-09-04T08:00:00\",\n    \"tranId\":84092344523696865420,\n    \"tradeId\":null\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.CoinMFutures.OrderBook.order_book","page":"Binance","title":"CryptoAPIs.Binance.CoinMFutures.OrderBook.order_book","text":"order_book(client::BinanceClient, query::OrderBookQuery)\norder_book(client::BinanceClient = Binance.CoinMFutures.public_client; kw...)\n\nGets current exchange orders.   GET dapi/v1/depth\n\nParameters:\n\nParameter Type Required Description\nsymbol String true \nlimit Int64 false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.CoinMFutures.order_book(;\n    symbol = \"ADAUSD_PERP\",\n) \n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"E\":\"2024-03-21T22:59:25.734000128\",\n  \"T\":\"2024-03-21T22:59:25.724999936\",\n  \"asks\":[\n    {\n      \"price\":0.6312,\n      \"size\":1140.0\n    },\n    ...\n  ],\n  \"symbol\":\"ADAUSD_PERP\",\n  \"lastUpdateId\":895428654926,\n  \"bids\":[\n    {\n      \"price\":0.6311,\n      \"size\":9.0\n    },\n    ...\n  ],\n  \"pair\":\"ADAUSD\"\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.CoinMFutures.PremiumIndex.premium_index","page":"Binance","title":"CryptoAPIs.Binance.CoinMFutures.PremiumIndex.premium_index","text":"premium_index(client::BinanceClient, query::PremiumIndexQuery)\npremium_index(client::BinanceClient = Binance.CoinMFutures.public_client; kw...)\n\nGET dapi/v1/premiumIndex\n\nParameters:\n\nParameter Type Required Description\nsymbol String false \npair String false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.CoinMFutures.premium_index(;\n    pair = \"BTCUSD\",\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n {\n    \"symbol\":\"BTCUSD_240329\",\n    \"pair\":\"BTCUSD\",\n    \"markPrice\":70397.85306869,\n    \"indexPrice\":70195.20240214,\n    \"estimatedSettlePrice\":70128.01636024,\n    \"lastFundingRate\":\"\",\n    \"interestRate\":\"\",\n    \"nextFundingTime\":\"1970-01-01T00:00:00\",\n    \"time\":\"2024-03-26T18:22:48\"\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.CoinMFutures.Ticker.ticker","page":"Binance","title":"CryptoAPIs.Binance.CoinMFutures.Ticker.ticker","text":"ticker(client::BinanceClient, query::TickerQuery)\nticker(client::BinanceClient = Binance.CoinMFutures.public_client; kw...)\n\nGET dapi/v1/ticker/24hr\n\nParameters:\n\nParameter Type Required Description\nsymbol String false \npair String false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.CoinMFutures.ticker(;\n    pair = \"BTCUSD\",\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n {\n    \"symbol\":\"BTCUSD_240329\",\n    \"pair\":\"BTCUSD\",\n    \"pricechange\":null,\n    \"pricechangePercent\":null,\n    \"weightedAvgPrice\":70683.35523318,\n    \"lastPrice\":70261.6,\n    \"lastQty\":11,\n    \"openPrice\":71004.7,\n    \"highPrice\":71750.0,\n    \"lowPrice\":69500.4,\n    \"volume\":1027906,\n    \"baseVolume\":1454.24053033,\n    \"openTime\":\"2024-03-25T19:03:00\",\n    \"closeTime\":\"2024-03-26T19:03:03.286000128\",\n    \"firstId\":7968276,\n    \"lastId\":8038563,\n    \"count\":70288\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"}]
}
