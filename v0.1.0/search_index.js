var documenterSearchIndex = {"docs":
[{"location":"pages/api_reference/#API-Reference","page":"API Reference","title":"API Reference","text":"","category":"section"},{"location":"pages/api_reference/","page":"API Reference","title":"API Reference","text":"CryptoAPIs.APIsHeaders\nCryptoAPIs.APIsResponse\nCryptoAPIs.APIsResult","category":"page"},{"location":"pages/api_reference/#CryptoAPIs.APIsHeaders","page":"API Reference","title":"CryptoAPIs.APIsHeaders","text":"APIsHeaders\n\nHeaders of the API resonse.\n\nOptional fields\n\ndate::String = nothing: Response date.\nretry_after::Float64 = 1.0: Number of retries.\n\n\n\n\n\n","category":"type"},{"location":"pages/api_reference/#CryptoAPIs.APIsResponse","page":"API Reference","title":"CryptoAPIs.APIsResponse","text":"APIsResponse\n\nAPI response status.\n\nfields\n\nheaders::APIsHeaders: Headers of the API resonse.\nstatus_code::Int64: API response status code.\n\n\n\n\n\n","category":"type"},{"location":"pages/api_reference/#CryptoAPIs.APIsResult","page":"API Reference","title":"CryptoAPIs.APIsResult","text":"APIsResult{T}\n\nResult T of the API method .\n\nRequired fields\n\nclient::AbstractAPIsClient: Request client.\nquery::APIsRequest: Request parameter query.\nresult::T: Result of the API request method.\n\nOptional fields\n\nresponse::APIsResponse: API response.\n\n\n\n\n\n","category":"type"},{"location":"pages/api_reference/","page":"API Reference","title":"API Reference","text":"CryptoAPIs.crypto_apis_client\nCryptoAPIs.crypto_apis_result\nCryptoAPIs.crypto_apis_query","category":"page"},{"location":"pages/api_reference/#CryptoAPIs.crypto_apis_client","page":"API Reference","title":"CryptoAPIs.crypto_apis_client","text":"crypto_apis_client(x::APIsResult)\n\nGetter function for obtaining information about the request client.\n\n\n\n\n\n","category":"function"},{"location":"pages/api_reference/#CryptoAPIs.crypto_apis_result","page":"API Reference","title":"CryptoAPIs.crypto_apis_result","text":"crypto_apis_result(x::APIsResult)\n\nGetter function for obtaining the response result.\n\n\n\n\n\n","category":"function"},{"location":"pages/api_reference/#CryptoAPIs.crypto_apis_query","page":"API Reference","title":"CryptoAPIs.crypto_apis_query","text":"crypto_apis_query(x::APIsResult)\n\nGetter function for obtaining query of the API request.\n\n\n\n\n\n","category":"function"},{"location":"pages/developers/#For-Developers","page":"For Developers","title":"For Developers","text":"","category":"section"},{"location":"pages/developers/#Template-for-API-method-docs","page":"For Developers","title":"Template for API method docs","text":"","category":"section"},{"location":"pages/developers/","page":"For Developers","title":"For Developers","text":"\"\"\"\n    METHOD_NAME(client::EXCHANGE_CLIENT, query::METHOD_QUERY)\n    METHOD_NAME(client::EXCHANGE_CLIENT = EXCHANGE_MODULE.SUB_MODULE.public_client; kw...)\n\nDESCRIPTION.\n\n[`GET HTTP_REQUEST`](METHOD_URL)\n\n## Parameters:\n\n| Parameter | Type     | Required | Description |\n|:----------|:---------|:---------|:------------|\n| name      | type     | bool     | description |\n\n## Code samples:\n\n```julia\nusing Serde\nusing CryptoAPIs.EXCHANGE_MODULE\n\nresult = EXCHANGE_MODULE.SUB_MODULE.METHOD_MODULE.METHOD_NAME(;\n    ...\n)\n\nto_pretty_json(result.result)\n```\n\n## Result:\n\n```json\n{\n    JSON_RESULT\n}\n```\n\"\"\"","category":"page"},{"location":"pages/Coinbase/#Coinbase","page":"Coinbase","title":"Coinbase","text":"","category":"section"},{"location":"pages/Coinbase/","page":"Coinbase","title":"Coinbase","text":"CryptoAPIs.Coinbase.CoinbaseClient\nCryptoAPIs.Coinbase.CoinbaseAPIError","category":"page"},{"location":"pages/Coinbase/#CryptoAPIs.Coinbase.CoinbaseClient","page":"Coinbase","title":"CryptoAPIs.Coinbase.CoinbaseClient","text":"CoinbaseClient <: AbstractAPIsClient\n\nClient info.\n\nRequired fields\n\nbase_url::String: Base URL for the client. \n\nOptional fields\n\npublic_key::String: Public key for authentication.\nsecret_key::String: Secret key for authentication.\ninterface::String: Interface for the client.\nproxy::String: Proxy information for the client.\naccount_name::String: Account name associated with the client.\ndescription::String: Description of the client.\n\n\n\n\n\n","category":"type"},{"location":"pages/Coinbase/#CryptoAPIs.Coinbase.CoinbaseAPIError","page":"Coinbase","title":"CryptoAPIs.Coinbase.CoinbaseAPIError","text":"CoinbaseAPIError{T} <: AbstractAPIsError\n\nException thrown when an API method fails with code T.\n\nRequired fields\n\nmsg::String: Error message.\n\n\n\n\n\n","category":"type"},{"location":"pages/Coinbase/#Spot","page":"Coinbase","title":"Spot","text":"","category":"section"},{"location":"pages/Coinbase/","page":"Coinbase","title":"Coinbase","text":"CryptoAPIs.Coinbase.Spot.public_client","category":"page"},{"location":"pages/Coinbase/#CryptoAPIs.Coinbase.Spot.public_client","page":"Coinbase","title":"CryptoAPIs.Coinbase.Spot.public_client","text":"public_client = CoinbaseClient(; base_url = \"https://api.exchange.coinbase.com\")\n\n\n\n\n\n","category":"constant"},{"location":"pages/Coinbase/","page":"Coinbase","title":"Coinbase","text":"CryptoAPIs.Coinbase.Spot.candle\nCryptoAPIs.Coinbase.Spot.currency\nCryptoAPIs.Coinbase.Spot.ticker","category":"page"},{"location":"pages/Coinbase/#CryptoAPIs.Coinbase.Spot.Candle.candle","page":"Coinbase","title":"CryptoAPIs.Coinbase.Spot.Candle.candle","text":"candle(client::CoinbaseClient, query::CandleQuery)\ncandle(client::CoinbaseClient = Coinbase.Spot.public_client; kw...)\n\nGet rates for a single product by product ID, grouped in buckets.\n\nGET products/{product_id}/candles\n\nParameters:\n\nParameter Type Required Description\ngranularity TimeInterval true \nstart DateTime false \n_end DateTime false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Coinbase\n\nresult = Coinbase.Spot.candle(;\n    granularity = Coinbase.Spot.Candle.d1\n) \n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"time\":\"2024-03-21T00:00:00\",\n    \"low\":0.617,\n    \"high\":0.648,\n    \"open\":0.637,\n    \"close\":0.632,\n    \"volume\":417732.13\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Coinbase/#CryptoAPIs.Coinbase.Spot.Currency.currency","page":"Coinbase","title":"CryptoAPIs.Coinbase.Spot.Currency.currency","text":"currency(client::CoinbaseClient, query::CurrencyQuery)\ncurrency(client::CoinbaseClient = Coinbase.Spot.public_client; kw...)\n\nGets a list of all known currencies.\n\nGET currencies\n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Coinbase\n\nresult = Coinbase.Spot.currency() \n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"id\":\"00\",\n    \"name\":\"00 Token\",\n    \"min_size\":\"0.00000001\",\n    \"status\":\"online\",\n    \"message\":null,\n    \"max_precision\":1.0e-8,\n    \"convertible_to\":[\n        \n    ],\n    \"details\":{\n        \"type\":\"crypto\",\n        \"symbol\":null,\n        \"network_confirmations\":14,\n        \"sort_order\":0,\n        \"crypto_address_link\":\"https://etherscan.io/token/0x881ba05de1e78f549cc63a8f6cabb1d4ad32250d?a={{address}}\",\n        \"crypto_transaction_link\":\"https://etherscan.io/tx/0x{{txId}}\",\n        \"push_payment_methods\":[\n        \n        ],\n        \"group_types\":[\n        \n        ],\n        \"display_name\":null,\n        \"processing_time_seconds\":null,\n        \"min_withdrawal_amount\":1.0e-8,\n        \"max_withdrawal_amount\":410000.0\n    },\n    \"default_network\":\"ethereum\",\n    \"supported_networks\":[\n        {\n        \"id\":\"ethereum\",\n        \"name\":\"Ethereum\",\n        \"status\":\"online\",\n        \"contract_address\":\"0x881ba05de1e78f549cc63a8f6cabb1d4ad32250d\",\n        \"crypto_address_link\":\"https://etherscan.io/token/0x881ba05de1e78f549cc63a8f6cabb1d4ad32250d?a={{address}}\",\n        \"crypto_transaction_link\":\"https://etherscan.io/tx/0x{{txId}}\",\n        \"min_withdrawal_amount\":1.0e-8,\n        \"max_withdrawal_amount\":410000.0,\n        \"network_confirmations\":14,\n        \"processing_time_seconds\":null\n        }\n    ]\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Coinbase/#CryptoAPIs.Coinbase.Spot.Ticker.ticker","page":"Coinbase","title":"CryptoAPIs.Coinbase.Spot.Ticker.ticker","text":"ticker(client::CoinbaseClient, query::TickerQuery)\nticker(client::CoinbaseClient = Coinbase.Spot.public_client; kw...)\n\nGets snapshot information about the last trade (tick), best bid/ask and 24h volume.\n\nGET products/{product_id}/ticker\n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Coinbase\n\nresult = Coinbase.Spot.ticker(\n    product_id = \"ADA-USDT\",\n) \n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"ask\":0.633,\n  \"bid\":0.632,\n  \"volume\":420912.11,\n  \"trade_id\":679787,\n  \"price\":0.633,\n  \"size\":23.7,\n  \"time\":\"2024-03-21T23:34:52.062646\"\n}\n\n\n\n\n\n","category":"function"},{"location":"#CryptoAPIs.jl","page":"Home","title":"CryptoAPIs.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"CryptoAPIs is a library written in Julia that combines API wrappers from various exchanges, simplifying access to market ðŸ’¹ data.","category":"page"},{"location":"#Supported-Exchange-APIs","page":"Home","title":"Supported Exchange APIs","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"<html>\n    <body>\n        <table>\n            <tr>\n                <th>#</th>\n                <th>Exchange</th>\n                <th>API Documentation</th>\n                <th>Module</th>\n                <th>Documentation</th>\n            </tr>\n            <tr>\n                <td><img src=\"assets/binance.png\" alt=\"Binance Logo\" width=\"20\" height=\"20\"></td>\n                <td><a href=\"https://www.binance.com/en/trade\">Binance</a></td>\n                <td><a href=\"https://binance-docs.github.io/apidocs/spot/en/\">Spot</a></td>\n                <td><a href=\"src/Binance/Spot\">CryptoAPIs.Binance.Spot</a></td>\n                <td><a href=\"https://bhftbootcamp.github.io/CryptoAPIs.jl/stable/pages/Binance/#Spot/\">Spot</a></td>\n            </tr>\n            <tr>\n                <td><img src=\"assets/binance.png\" alt=\"Binance Logo\" width=\"20\" height=\"20\"></td>\n                <td><a href=\"https://www.binance.com/futures\">Binance</a></td>\n                <td><a href=\"https://binance-docs.github.io/apidocs/futures/en/#change-log\">USD-M Futures</a></td>\n                <td><a href=\"src/Binance/USDMFutures\">CryptoAPIs.Binance.USDMFutures</a></td>\n                <td><a href=\"https://bhftbootcamp.github.io/CryptoAPIs.jl/stable/pages/Binance/#USDMFutures/\">USD-M Futures</a></td>\n            </tr>\n            <tr>\n                <td><img src=\"assets/binance.png\" alt=\"Binance Logo\" width=\"20\" height=\"20\"></td>\n                <td><a href=\"https://www.binance.com/delivery\">Binance</a></td>\n                <td><a href=\"https://binance-docs.github.io/apidocs/delivery/en/\">Coin-M Futures</a></td>\n                <td><a href=\"src/Binance/CoinMFutures\">CryptoAPIs.Binance.CoinMFutures</a></td>\n                <td><a href=\"https://bhftbootcamp.github.io/CryptoAPIs.jl/stable/pages/Binance/#CoinMFutures/\">Coin-M Futures</a></td>\n            </tr>\n            <tr>\n                <td><img src=\"assets/coinbase.png\" alt=\"Coinbase Logo\" width=\"20\" height=\"20\"></td>\n                <td><a href=\"https://www.coinbase.com/\">Coinbase Exchange</a></td>\n                <td><a href=\"https://docs.cloud.coinbase.com/exchange/reference/\">Spot</a></td>\n                <td><a href=\"src/Coinbase/Spot\">CryptoAPIs.Coinbase.Spot</a></td>\n                <td><a href=\"https://bhftbootcamp.github.io/CryptoAPIs.jl/stable/pages/Coinbase/#Spot/\">Spot</a></td>\n            </tr>\n        </table>\n    </body>\n</html>","category":"page"},{"location":"#Quickstart","page":"Home","title":"Quickstart","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using CryptoAPIs\nusing CryptoAPIs.Binance\n\nBinance.Spot.ticker(;\n    symbols = [\"ADAUSDT\", \"BTCUSDT\"]\n)\n\nBinance.Spot.candle(;\n    symbol = \"ADAUSDT\",\n    interval = Binance.Spot.Candle.M1\n)\n\nBinance.Spot.avg_price(;\n    symbol = \"ADAUSDT\"\n)\n\nBinance.Spot.order_book(;\n    symbol = \"ADAUSDT\"\n)","category":"page"},{"location":"pages/Binance/#Binance","page":"Binance","title":"Binance","text":"","category":"section"},{"location":"pages/Binance/","page":"Binance","title":"Binance","text":"CryptoAPIs.Binance.BinanceClient\nCryptoAPIs.Binance.BinanceAPIError","category":"page"},{"location":"pages/Binance/#CryptoAPIs.Binance.BinanceClient","page":"Binance","title":"CryptoAPIs.Binance.BinanceClient","text":"BinanceClient <: AbstractAPIsClient\n\nClient info.\n\nRequired fields\n\nbase_url::String: Base URL for the client. \n\nOptional fields\n\npublic_key::String: Public key for authentication.\nsecret_key::String: Secret key for authentication.\ninterface::String: Interface for the client.\nproxy::String: Proxy information for the client.\naccount_name::String: Account name associated with the client.\ndescription::String: Description of the client.\n\n\n\n\n\n","category":"type"},{"location":"pages/Binance/#CryptoAPIs.Binance.BinanceAPIError","page":"Binance","title":"CryptoAPIs.Binance.BinanceAPIError","text":"BinanceAPIError{T} <: AbstractAPIsError\n\nException thrown when an API method fails with code T.\n\nRequired fields\n\ncode::Int64: Error code.\n\nOptional fields\n\ntype::String: Type of error.\nmsg::String: Error message.\n\n\n\n\n\n","category":"type"},{"location":"pages/Binance/#Spot","page":"Binance","title":"Spot","text":"","category":"section"},{"location":"pages/Binance/","page":"Binance","title":"Binance","text":"CryptoAPIs.Binance.Spot.public_client","category":"page"},{"location":"pages/Binance/#CryptoAPIs.Binance.Spot.public_client","page":"Binance","title":"CryptoAPIs.Binance.Spot.public_client","text":"public_client = BinanceClient(; base_url = \"https://api.binance.com\")\n\n\n\n\n\n","category":"constant"},{"location":"pages/Binance/","page":"Binance","title":"Binance","text":"CryptoAPIs.Binance.Spot.candle\nCryptoAPIs.Binance.Spot.avg_price\nCryptoAPIs.Binance.Spot.order_book\nCryptoAPIs.Binance.Spot.ticker\nCryptoAPIs.Binance.Spot.coin_information","category":"page"},{"location":"pages/Binance/#CryptoAPIs.Binance.Spot.Candle.candle","page":"Binance","title":"CryptoAPIs.Binance.Spot.Candle.candle","text":"candle(client::BinanceClient, query::CandleQuery)\ncandle(client::BinanceClient = Binance.Spot.public_client; kw...)\n\nKline/candlestick bars for a symbol.\n\nGET api/v3/klines\n\nParameters:\n\nParameter Type Required Description\nsymbol String true \ninterval Period true \nendTime DateTime false \nlimit Int64 false \nstartTime DateTime false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.Spot.candle(;\n    symbol = \"ADAUSDT\",\n    interval = Binance.Spot.Candle.M1,\n) \n\nto_pretty_json(result.result)\n\nResult:\n\n[\n    {\n        \"openTime\":\"2018-04-01T00:00:00\",\n        \"openPrice\":0.25551,\n        \"highPrice\":0.3866,\n        \"lowPrice\":0.23983,\n        \"closePrice\":0.34145,\n        \"volume\":1.17451580874e9,\n        \"closeTime\":\"2018-04-30T23:59:59.999000064\",\n        \"quoteAssetVolume\":3.597636214561159e8,\n        \"tradesNumber\":759135,\n        \"takerBuyBaseAssetVolume\":5.556192707e8,\n        \"takerBuyQuoteAssetVolume\":1.706766832130686e8\n    },\n    ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.Spot.AvgPrice.avg_price","page":"Binance","title":"CryptoAPIs.Binance.Spot.AvgPrice.avg_price","text":"avg_price(client::BinanceClient, query::AvgPriceQuery)\navg_price(client::BinanceClient = Binance.Spot.public_client; kw...)\n\nCurrent average price for a symbol.\n\nGET api/v3/avgPrice\n\nParameters:\n\nParameter Type Required Description\nsymbol String true \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.Spot.avg_price(;\n    symbol = \"ADAUSDT\",\n) \n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"mins\":5,\n  \"price\":0.64545824\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.Spot.OrderBook.order_book","page":"Binance","title":"CryptoAPIs.Binance.Spot.OrderBook.order_book","text":"order_book(client::BinanceClient, query::OrderBookQuery)\norder_book(client::BinanceClient = Binance.Spot.public_client; kw...)\n\nGET api/v3/depth\n\nParameters:\n\nParameter Type Required Description\nsymbol String true \nlimit Int64 false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.Spot.order_book(;\n    symbol = \"ADAUSDT\"\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"asks\":[\n    {\n      \"price\":0.634,\n      \"size\":1478.6\n    },\n    ...\n    {\n      \"price\":0.6439,\n      \"size\":1862.3\n    }\n  ],\n  \"bids\":[\n    {\n      \"price\":0.6339,\n      \"size\":28448.6\n    },\n    ...\n    {\n      \"price\":0.624,\n      \"size\":3339.8\n    }\n  ],\n  \"lastUpdateId\":8394873195\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.Spot.Ticker.ticker","page":"Binance","title":"CryptoAPIs.Binance.Spot.Ticker.ticker","text":"ticker(client::BinanceClient, query::TickerQuery)\nticker(client::BinanceClient = Binance.Spot.public_client; kw...)\n\n24 hour rolling window price change statistics.\n\nGET api/v3/ticker/24hr\n\nParameters:\n\nParameter Type Required Description\nsymbol String false \nsymbols Vector{String} false \ntype String false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.Spot.ticker(;\n    symbol = \"ADAUSDT\",\n) \n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"symbol\":\"ADAUSDT\",\n  \"askPrice\":0.631,\n  \"askQty\":53.4,\n  \"bidPrice\":0.6309,\n  \"bidQty\":23714.9,\n  \"closeTime\":\"2024-03-21T14:04:37.151000064\",\n  \"count\":265067,\n  \"firstId\":482014355,\n  \"highPrice\":0.6459,\n  \"lastId\":482279421,\n  \"lastPrice\":0.631,\n  \"lastQty\":1282.0,\n  \"lowPrice\":0.5757,\n  \"openPrice\":0.6048,\n  \"openTime\":\"2024-03-20T14:04:37.151000064\",\n  \"prevClosePrice\":0.6048,\n  \"priceChange\":0.0262,\n  \"priceChangePercent\":4.332,\n  \"quoteVolume\":1.363472992331e8,\n  \"volume\":2.185537682e8,\n  \"weightedAvgPrice\":0.62386158\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.Spot.CoinInformation.coin_information","page":"Binance","title":"CryptoAPIs.Binance.Spot.CoinInformation.coin_information","text":"coin_information(client::BinanceClient, query::CoinInformationQuery)\ncoin_information(client::BinanceClient; kw...)\n\nGet information of coins (available for deposit and withdraw) for user.\n\nGET sapi/v1/capital/config/getall\n\nParameters:\n\nParameter Type Required Description\nrecvWindow Int64 false \nsignature String false \ntimestamp DateTime false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nbinance_client = BinanceClient(;\n    base_url = \"https://api.binance.com\",\n    public_key = ENV[\"BINANCE_PUBLIC_KEY\"],\n    secret_key = ENV[\"BINANCE_SECRET_KEY\"],\n)\n\nresult = Binance.Spot.coin_information(binance_client)\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"coin\":\"ADA\",\n    \"depositAllEnable\":true,\n    \"free\":0.0,\n    \"freeze\":0.0,\n    \"ipoable\":0.0,\n    \"ipoing\":0.0,\n    \"isLegalMoney\":false,\n    \"locked\":0.0,\n    \"name\":\"Cardano\",\n    \"networkList\":[\n      {\n        \"addressRegex\":\"^(([0-9A-Za-z]{57,59})|([0-9A-Za-z]{100,104}))$\",\n        \"addressRule\":null,\n        \"busy\":false,\n        \"coin\":\"ADA\",\n        \"country\":null,\n        \"depositDesc\":\"\",\n        \"depositDust\":1.0e-6,\n        \"depositEnable\":true,\n        \"estimatedArrivalTime\":\"1970-01-01T00:00:00\",\n        \"isDefault\":true,\n        \"memoRegex\":\"\",\n        \"minConfirm\":30,\n        \"name\":\"Cardano\",\n        \"network\":\"ADA\",\n        \"resetAddressStatus\":false,\n        \"sameAddress\":false,\n        \"specialTips\":\"\",\n        \"specialWithdrawTips\":null,\n        \"unLockConfirm\":0,\n        \"withdrawDesc\":\"\",\n        \"withdrawEnable\":true,\n        \"withdrawFee\":0.8,\n        \"withdrawIntegerMultiple\":1.0e-6,\n        \"withdrawMax\":5.0e7,\n        \"withdrawMin\":2.0\n      }\n    ],\n    \"storage\":0.0,\n    \"trading\":true,\n    \"withdrawAllEnable\":true,\n    \"withdrawing\":0.0\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#USDMFutures","page":"Binance","title":"USDMFutures","text":"","category":"section"},{"location":"pages/Binance/","page":"Binance","title":"Binance","text":"CryptoAPIs.Binance.USDMFutures.public_client","category":"page"},{"location":"pages/Binance/#CryptoAPIs.Binance.USDMFutures.public_client","page":"Binance","title":"CryptoAPIs.Binance.USDMFutures.public_client","text":"public_client = BinanceClient(; base_url = \"https://fapi.binance.com\")\n\n\n\n\n\n","category":"constant"},{"location":"pages/Binance/","page":"Binance","title":"Binance","text":"CryptoAPIs.Binance.USDMFutures.candle\nCryptoAPIs.Binance.USDMFutures.exchange_info\nCryptoAPIs.Binance.USDMFutures.order_book\nCryptoAPIs.Binance.USDMFutures.ticker","category":"page"},{"location":"pages/Binance/#CryptoAPIs.Binance.USDMFutures.Candle.candle","page":"Binance","title":"CryptoAPIs.Binance.USDMFutures.Candle.candle","text":"candle(client::BinanceClient, query::CandleQuery)\ncandle(client::BinanceClient = Binance.USDMFutures.public_client; kw...)\n\nKline/candlestick bars for a symbol.\n\nWrapper for method: GET fapi/v3/klines.\n\nParameters:\n\nParameter Type Required Description\nsymbol String true \ninterval TimeInterval true \nendTime DateTime false \nlimit Int64 false \nstartTime DateTime false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.USDMFutures.candle(;\n    symbol = \"ADAUSDT\",\n    interval = Binance.USDMFutures.Candle.M1,\n) \n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"openTime\":\"2020-01-01T00:00:00\",\n    \"openPrice\":0.0545,\n    \"highPrice\":0.05559,\n    \"lowPrice\":0.05209,\n    \"closePrice\":0.05387,\n    \"volume\":2.44632854e8,\n    \"closeTime\":\"2020-01-31T23:59:59.999000064\",\n    \"quoteAssetVolume\":1.313060288191e7,\n    \"tradesNumber\":40186,\n    \"takerBuyBaseAssetVolume\":1.16954492e8,\n    \"takerBuyQuoteAssetVolume\":6.28735588554e6\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.USDMFutures.ExchangeInfo.exchange_info","page":"Binance","title":"CryptoAPIs.Binance.USDMFutures.ExchangeInfo.exchange_info","text":"exchange_info(client::BinanceClient, query::ExchangeInfoQuery)\nexchange_info(client::BinanceClient = Binance.USDMFutures.public_client; kw...)\n\nCurrent exchange trading rules and symbol information\n\nGET fapi/v1/exchangeInfo\n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.USDMFutures.exchange_info() \n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"futuresType\":\"U_MARGINED\",\n  \"symbols\":\n  [\n    {\n    \"baseAsset\":\"BTC\",\n    \"baseAssetPrecision\":8,\n    \"contractType\":\"PERPETUAL\",\n    \"deliveryDate\":\"2100-12-25T08:00:00\",\n    \"filters\":[\n      {\n        \"filterType\":\"PRICE_FILTER\",\n        \"limit\":null,\n        \"maxPrice\":4.529764e6,\n        \"maxQty\":null,\n        \"minPrice\":556.8,\n        \"minQty\":null,\n        \"multiplierDecimal\":null,\n        \"multiplierDown\":null,\n        \"multiplierUp\":null,\n        \"notional\":null,\n        \"stepSize\":null,\n        \"tickSize\":0.1\n      },\n      ...\n    ],\n    \"liquidationFee\":0.0125,\n    \"maintMarginPercent\":2.5,\n    \"marginAsset\":\"USDT\",\n    \"marketTakeBound\":0.05,\n    \"maxMoveOrderLimit\":10000,\n    \"onboardDate\":\"2019-09-25T08:00:00\",\n    \"orderTypes\":[\n      \"LIMIT\",\n      \"MARKET\",\n      \"STOP\",\n      \"STOP_MARKET\",\n      \"TAKE_PROFIT\",\n      \"TAKE_PROFIT_MARKET\",\n      \"TRAILING_STOP_MARKET\"\n    ],\n    \"pair\":\"BTCUSDT\",\n    \"pricePrecision\":2,\n    \"quantityPrecision\":3,\n    \"quoteAsset\":\"USDT\",\n    \"quotePrecision\":8,\n    \"requiredMarginPercent\":5.0,\n    \"settlePlan\":0,\n    \"status\":\"TRADING\",\n    \"symbol\":\"BTCUSDT\",\n    \"timeInForce\":[\n      \"GTC\",\n      \"IOC\",\n      \"FOK\",\n      \"GTX\",\n      \"GTD\"\n    ],\n    \"triggerProtect\":0.05,\n    \"underlyingSubType\":[\n      \"PoW\"\n    ],\n    \"underlyingType\":\"COIN\"\n    },\n    ...\n  ]\n  \"assets\":\n  [\n    {\n    \"asset\":\"USDT\",\n    \"autoAssetExchange\":-10000.0,\n    \"marginAvailable\":true\n    },\n    ...\n  ]\n  \"serverTime\":\"2024-03-21T20:00:09.139000064\",\n  \"exchangeFilters\":null,\n  \"timezone\":\"UTC\",\n  \"rateLimits\":\n  [\n    {\n    \"interval\":\"MINUTE\",\n    \"intervalNum\":1,\n    \"limit\":2400,\n    \"rateLimitType\":\"REQUEST_WEIGHT\"\n    },\n    ...\n  ]\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.USDMFutures.OrderBook.order_book","page":"Binance","title":"CryptoAPIs.Binance.USDMFutures.OrderBook.order_book","text":"order_book(client::BinanceClient, query::OrderBookQuery)\norder_book(client::BinanceClient = Binance.USDMFutures.public_client; kw...)\n\nGET fapi/v1/depth\n\nParameters:\n\nParameter Type Required Description\nsymbol String true \nlimit Int64 false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.USDMFutures.order_book(;\n    symbol = \"ADAUSDT\"\n) \n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"T\":\"2024-03-21T21:25:53.671000064\",\n  \"E\":\"2024-03-21T21:25:53.680999936\",\n  \"asks\":[\n    {\n      \"price\":0.6337,\n      \"size\":20325.0\n    },\n    ...\n  ],\n  \"lastUpdateId\":4248628084740,\n  \"bids\":[\n    {\n      \"price\":0.6336,\n      \"size\":58607.0\n    },\n    ...\n  ]\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.USDMFutures.Ticker.ticker","page":"Binance","title":"CryptoAPIs.Binance.USDMFutures.Ticker.ticker","text":"ticker(client::BinanceClient, query::TickerQuery)\nticker(client::BinanceClient = Binance.USDMFutures.public_client; kw...)\n\n24 hour rolling window price change statistics.\n\nGET fapi/v1/ticker/24hr\n\nParameters:\n\nParameter Type Required Description\nsymbol String false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.USDMFutures.ticker(;\n    symbol = \"ADAUSDT\",\n) \n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"closeTime\":\"2024-03-21T21:40:44.384999936\",\n  \"count\":952934,\n  \"firstId\":1090483662,\n  \"highPrice\":0.649,\n  \"lastId\":1091436596,\n  \"lastPrice\":0.631,\n  \"lastQty\":1000.0,\n  \"lowPrice\":0.6182,\n  \"openPrice\":0.6389,\n  \"openTime\":\"2024-03-20T21:40:00\",\n  \"priceChange\":-0.0079,\n  \"priceChangePercent\":-1.237,\n  \"quoteVolume\":4.378010427731e8,\n  \"symbol\":\"ADAUSDT\",\n  \"volume\":6.89939719e8,\n  \"weightedAvgPrice\":0.63455\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CoinMFutures","page":"Binance","title":"CoinMFutures","text":"","category":"section"},{"location":"pages/Binance/","page":"Binance","title":"Binance","text":"CryptoAPIs.Binance.CoinMFutures.public_client","category":"page"},{"location":"pages/Binance/#CryptoAPIs.Binance.CoinMFutures.public_client","page":"Binance","title":"CryptoAPIs.Binance.CoinMFutures.public_client","text":"public_client = BinanceClient(; base_url = \"https://dapi.binance.com\")\n\n\n\n\n\n","category":"constant"},{"location":"pages/Binance/","page":"Binance","title":"Binance","text":"CryptoAPIs.Binance.CoinMFutures.candle\nCryptoAPIs.Binance.CoinMFutures.exchange_info\nCryptoAPIs.Binance.CoinMFutures.order_book\nCryptoAPIs.Binance.CoinMFutures.income_log","category":"page"},{"location":"pages/Binance/#CryptoAPIs.Binance.CoinMFutures.Candle.candle","page":"Binance","title":"CryptoAPIs.Binance.CoinMFutures.Candle.candle","text":"candle(client::BinanceClient, query::CandleQuery)\ncandle(client::BinanceClient = Binance.CoinMFutures.public_client; kw...)\n\nKline/candlestick bars for a symbol.\n\nGET dapi/v1/klines\n\nParameters:\n\nParameter Type Required Description\nsymbol String true \ninterval Period true \nendTime DateTime false \nlimit Int64 false \nstartTime DateTime false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.CoinMFutures.candle(;\n    symbol = \"ADAUSD_PERP\",\n    interval = Binance.CoinMFutures.Candle.M1,\n) \n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"openTime\":\"2023-10-01T00:00:00\",\n    \"openPrice\":0.2538,\n    \"highPrice\":0.3049,\n    \"lowPrice\":0.2387,\n    \"closePrice\":0.2931,\n    \"volume\":3.1780325e7,\n    \"closeTime\":\"2023-10-31T23:59:59.999000064\",\n    \"baseAssetVolume\":1.189509044956558e9,\n    \"tradesNumber\":795986,\n    \"takerBuyVolume\":1.5506238e7,\n    \"takerBuyBaseAssetVolume\":5.799281977142488e8\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.CoinMFutures.ExchangeInfo.exchange_info","page":"Binance","title":"CryptoAPIs.Binance.CoinMFutures.ExchangeInfo.exchange_info","text":"exchange_info(client::BinanceClient, query::ExchangeInfoQuery)\nexchange_info(client::BinanceClient = Binance.CoinMFutures.public_client; kw...)\n\nCurrent exchange trading rules and symbol information.\n\nGET dapi/v1/exchangeInfo\n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.CoinMFutures.exchange_info() \n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"symbols\":[\n    {\n      \"baseAsset\":\"BTC\",\n      \"baseAssetPrecision\":8,\n      \"contractSize\":100,\n      \"contractStatus\":\"TRADING\",\n      \"contractType\":\"PERPETUAL\",\n      \"deliveryDate\":\"2100-12-25T08:00:00\",\n      \"equalQtyPrecision\":4,\n      \"filters\":[\n        {\n          \"filterType\":\"PRICE_FILTER\",\n          \"limit\":null,\n          \"maxPrice\":4.520958e6,\n          \"maxQty\":null,\n          \"minPrice\":1000.0,\n          \"minQty\":null,\n          \"multiplierDecimal\":null,\n          \"multiplierDown\":null,\n          \"multiplierUp\":null,\n          \"notional\":null,\n          \"stepSize\":null,\n          \"tickSize\":0.1\n        },\n        {\n          \"filterType\":\"LOT_SIZE\",\n          \"limit\":null,\n          \"maxPrice\":null,\n          \"maxQty\":1.0e6,\n          \"minPrice\":null,\n          \"minQty\":1.0,\n          \"multiplierDecimal\":null,\n          \"multiplierDown\":null,\n          \"multiplierUp\":null,\n          \"notional\":null,\n          \"stepSize\":1.0,\n          \"tickSize\":null\n        },\n        {\n          \"filterType\":\"MARKET_LOT_SIZE\",\n          \"limit\":null,\n          \"maxPrice\":null,\n          \"maxQty\":60000.0,\n          \"minPrice\":null,\n          \"minQty\":1.0,\n          \"multiplierDecimal\":null,\n          \"multiplierDown\":null,\n          \"multiplierUp\":null,\n          \"notional\":null,\n          \"stepSize\":1.0,\n          \"tickSize\":null\n        },\n        {\n          \"filterType\":\"MAX_NUM_ORDERS\",\n          \"limit\":200,\n          \"maxPrice\":null,\n          \"maxQty\":null,\n          \"minPrice\":null,\n          \"minQty\":null,\n          \"multiplierDecimal\":null,\n          \"multiplierDown\":null,\n          \"multiplierUp\":null,\n          \"notional\":null,\n          \"stepSize\":null,\n          \"tickSize\":null\n        },\n        {\n          \"filterType\":\"MAX_NUM_ALGO_ORDERS\",\n          \"limit\":20,\n          \"maxPrice\":null,\n          \"maxQty\":null,\n          \"minPrice\":null,\n          \"minQty\":null,\n          \"multiplierDecimal\":null,\n          \"multiplierDown\":null,\n          \"multiplierUp\":null,\n          \"notional\":null,\n          \"stepSize\":null,\n          \"tickSize\":null\n        },\n        {\n          \"filterType\":\"PERCENT_PRICE\",\n          \"limit\":null,\n          \"maxPrice\":null,\n          \"maxQty\":null,\n          \"minPrice\":null,\n          \"minQty\":null,\n          \"multiplierDecimal\":4.0,\n          \"multiplierDown\":0.95,\n          \"multiplierUp\":1.05,\n          \"notional\":null,\n          \"stepSize\":null,\n          \"tickSize\":null\n        }\n      ],\n      \"liquidationFee\":0.015,\n      \"maintMarginPercent\":2.5,\n      \"marginAsset\":\"BTC\",\n      \"marketTakeBound\":0.05,\n      \"maxMoveOrderLimit\":10000,\n      \"onboardDate\":\"2020-08-10T07:00:00\",\n      \"orderTypes\":[\n        \"LIMIT\",\n        \"MARKET\",\n        \"STOP\",\n        \"STOP_MARKET\",\n        \"TAKE_PROFIT\",\n        \"TAKE_PROFIT_MARKET\",\n        \"TRAILING_STOP_MARKET\"\n      ],\n      \"pair\":\"BTCUSD\",\n      \"pricePrecision\":1,\n      \"quantityPrecision\":0,\n      \"quoteAsset\":\"USD\",\n      \"quotePrecision\":8,\n      \"requiredMarginPercent\":5.0,\n      \"symbol\":\"BTCUSD_PERP\",\n      \"timeInForce\":[\n        \"GTC\",\n        \"IOC\",\n        \"FOK\",\n        \"GTX\"\n      ],\n      \"triggerProtect\":0.05,\n      \"underlyingSubType\":[\n        \"PoW\"\n      ],\n      \"underlyingType\":\"COIN\"\n    },\n    ...\n  ],\n  \"serverTime\":\"2024-03-21T22:00:07.956\",\n  \"exchangeFilters\":null,\n  \"timezone\":\"UTC\",\n  \"rateLimits\":[\n    {\n      \"interval\":\"MINUTE\",\n      \"intervalNum\":1,\n      \"limit\":2400,\n      \"rateLimitType\":\"REQUEST_WEIGHT\"\n    },\n    ...\n  ]\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.CoinMFutures.OrderBook.order_book","page":"Binance","title":"CryptoAPIs.Binance.CoinMFutures.OrderBook.order_book","text":"order_book(client::BinanceClient, query::OrderBookQuery)\norder_book(client::BinanceClient = Binance.CoinMFutures.public_client; kw...)\n\nGets current exchange orders.   GET dapi/v1/depth\n\nParameters:\n\nParameter Type Required Description\nsymbol String true \nlimit Int64 false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nresult = Binance.CoinMFutures.order_book(;\n    symbol = \"ADAUSD_PERP\",\n) \n\nto_pretty_json(result.result)\n\nResult:\n\n{\n  \"E\":\"2024-03-21T22:59:25.734000128\",\n  \"T\":\"2024-03-21T22:59:25.724999936\",\n  \"asks\":[\n    {\n      \"price\":0.6312,\n      \"size\":1140.0\n    },\n    ...\n  ],\n  \"symbol\":\"ADAUSD_PERP\",\n  \"lastUpdateId\":895428654926,\n  \"bids\":[\n    {\n      \"price\":0.6311,\n      \"size\":9.0\n    },\n    ...\n  ],\n  \"pair\":\"ADAUSD\"\n}\n\n\n\n\n\n","category":"function"},{"location":"pages/Binance/#CryptoAPIs.Binance.CoinMFutures.IncomeLog.income_log","page":"Binance","title":"CryptoAPIs.Binance.CoinMFutures.IncomeLog.income_log","text":"income_log(client::BinanceClient, query::IncomeLogQuery)\nincome_log(client::BinanceClient; kw...)\n\nGET dapi/v1/income\n\nParameters:\n\nParameter Type Required Description\nsymbol String false \nincomeType String false \nstartTime DateTime false \nendTime DateTime false \nlimit Int64 false \nrecvWindow Int64 false \ntimestamp DateTime false \nsignature String false \n\nCode samples:\n\nusing Serde\nusing CryptoAPIs.Binance\n\nbinance_client = BinanceClient(;\n    base_url = \"https://dapi.binance.com\",\n    public_key = ENV[\"BINANCE_FUT_PUBLIC_KEY\"],\n    secret_key = ENV[\"BINANCE_FUT_SECRET_KEY\"],\n)\n\nresult = Binance.CoinMFutures.income_log(\n    binance_client\n)\n\nto_pretty_json(result.result)\n\nResult:\n\n[\n  {\n    \"symbol\":\"ETHUSD_PERP\",\n    \"incomeType\":\"FUNDING_FEE\",\n    \"info\":null,\n    \"income\":1.2e-7,\n    \"asset\":\"ETH\",\n    \"time\":\"2023-09-04T08:00:00\",\n    \"tranId\":84092344523696865420,\n    \"tradeId\":null\n  },\n  ...\n]\n\n\n\n\n\n","category":"function"}]
}
